[{"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/App.js":"1","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/store/index.js":"2","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/reducers/PostsReducer/DeletePostReducer.js":"3","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/reducers/GlossaryReducer/GetAllGlossaryReducer.js":"4","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/reducers/CategoryReducer/ModifyCategoryReducer.js":"5","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/types/PostsType.js":"6","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/layout/FaqLayout/index.js":"7","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/screens/Admin/FAQ/index.js":"8","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/screens/Posts/PostDetail/index.js":"9","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/types/BlogType.js":"10","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/components/SecondaryNavigation/index.js":"11","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/components/PostList/index.js":"12","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/actions/ImageActions.js":"13","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/reducers/PostsReducer/AddNewPostReducer.js":"14","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/api/NotificationAPi.js":"15","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/utils/index.js":"16","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/screens/Blog/BlogDetail/index.js":"17","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/api/DomaineApi.js":"18","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/api/BlogApi.js":"19","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/screens/Admin/Posts/EditPost/index.js":"20","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/actions/FaqActions.js":"21","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/components/RichTextEditor/index.js":"22","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/components/Comment/index.js":"23","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/reducers/DomaineReducer/CreateDomaineReducer.js":"24","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/layout/PostLayout/index.js":"25","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/screens/SignIn/index.js":"26","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/screens/Admin/Blog/NewBlog/index.js":"27","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/fakeData/index.js":"28","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/reducers/CategoryReducer/GetAllCategoryReducer.js":"29","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/components/GlossaryList/index.js":"30","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/components/GlossaryItem/index.js":"31","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/lang/Language.ts":"32","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/types/CommentType.js":"33","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/reducers/TestimonialReducer/GetTestimonialReducer.js":"34","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/layout/GlossaryLayout/index.js":"35","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/components/Loader/index.js":"36","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/config/ServerConfig.js":"37","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/screens/Admin/Posts/PostCategory/index.js":"38","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/screens/Home/index.js":"39","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/components/AboutOpenRHWidget/index.js":"40","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/components/SocialShare/index.js":"41","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/api/CommentApi.js":"42","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/reducers/JobOfferReducer/PostJobOfferReducer.js":"43","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/screens/Admin/Testimonial/index.js":"44","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/types/TestimonialType.js":"45","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/types/JobOfferType.js":"46","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/components/PopularPostAside/index.js":"47","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/reducers/PostsReducer/GetPostByIdReducer.js":"48","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/components/PostWidgetList/index.js":"49","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/api/SignInApi.js":"50","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/reducers/CommentReducer/PostCommentReducer.js":"51","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/types/DomaineType.js":"52","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/actions/CategoryActions.js":"53","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/components/PostWidget/index.js":"54","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/layout/TestimonialLayout/index.js":"55","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/components/Slider/index.js":"56"},{"size":5738,"mtime":1637254770951,"results":"57","hashOfConfig":"58"},{"size":390,"mtime":1635863449302,"results":"59","hashOfConfig":"58"},{"size":898,"mtime":1635863449293,"results":"60","hashOfConfig":"61"},{"size":936,"mtime":1635863449292,"results":"62","hashOfConfig":"58"},{"size":935,"mtime":1635863449291,"results":"63","hashOfConfig":"61"},{"size":2956,"mtime":1635863449295,"results":"64","hashOfConfig":"61"},{"size":356,"mtime":1635863449287,"results":"65","hashOfConfig":"61"},{"size":22541,"mtime":1635863449296,"results":"66","hashOfConfig":"58"},{"size":11893,"mtime":1635863449300,"results":"67","hashOfConfig":"61"},{"size":642,"mtime":1635863449294,"results":"68","hashOfConfig":"58"},{"size":2454,"mtime":1635863449283,"results":"69","hashOfConfig":"58"},{"size":10099,"mtime":1635863449282,"results":"70","hashOfConfig":"61"},{"size":511,"mtime":1635863449288,"results":"71","hashOfConfig":"61"},{"size":902,"mtime":1635863449292,"results":"72","hashOfConfig":"61"},{"size":1330,"mtime":1635863449290,"results":"73","hashOfConfig":"61"},{"size":4122,"mtime":1635868360304,"results":"74","hashOfConfig":"61"},{"size":8606,"mtime":1635863449298,"results":"75","hashOfConfig":"58"},{"size":4217,"mtime":1635863449289,"results":"76","hashOfConfig":"61"},{"size":2774,"mtime":1635863449289,"results":"77","hashOfConfig":"61"},{"size":30069,"mtime":1635863449296,"results":"78","hashOfConfig":"58"},{"size":859,"mtime":1635863449288,"results":"79","hashOfConfig":"61"},{"size":12548,"mtime":1637258058241,"results":"80","hashOfConfig":"58"},{"size":1194,"mtime":1635863449277,"results":"81","hashOfConfig":"58"},{"size":937,"mtime":1635863449291,"results":"82","hashOfConfig":"58"},{"size":605,"mtime":1635863449287,"results":"83","hashOfConfig":"58"},{"size":6803,"mtime":1635863449301,"results":"84","hashOfConfig":"58"},{"size":15375,"mtime":1635863449295,"results":"85","hashOfConfig":"58"},{"size":11443,"mtime":1635863449285,"results":"86","hashOfConfig":"58"},{"size":1048,"mtime":1635863449291,"results":"87","hashOfConfig":"58"},{"size":3337,"mtime":1635863449279,"results":"88","hashOfConfig":"58"},{"size":3710,"mtime":1635863449279,"results":"89","hashOfConfig":"58"},{"size":54,"mtime":1635863449285,"results":"90","hashOfConfig":"58"},{"size":231,"mtime":1635863449294,"results":"91","hashOfConfig":"58"},{"size":969,"mtime":1635863449293,"results":"92","hashOfConfig":"58"},{"size":386,"mtime":1635863449287,"results":"93","hashOfConfig":"58"},{"size":647,"mtime":1635863449281,"results":"94","hashOfConfig":"58"},{"size":2373,"mtime":1635863449285,"results":"95","hashOfConfig":"58"},{"size":16967,"mtime":1635863449297,"results":"96","hashOfConfig":"58"},{"size":68110,"mtime":1635863449299,"results":"97","hashOfConfig":"58"},{"size":390,"mtime":1635863449275,"results":"98","hashOfConfig":"58"},{"size":936,"mtime":1635863449284,"results":"99","hashOfConfig":"58"},{"size":1101,"mtime":1635863449289,"results":"100","hashOfConfig":"58"},{"size":931,"mtime":1635863449292,"results":"101","hashOfConfig":"58"},{"size":13135,"mtime":1635863449298,"results":"102","hashOfConfig":"58"},{"size":553,"mtime":1635863449295,"results":"103","hashOfConfig":"58"},{"size":489,"mtime":1635863449295,"results":"104","hashOfConfig":"58"},{"size":2758,"mtime":1635863449282,"results":"105","hashOfConfig":"58"},{"size":910,"mtime":1635863449293,"results":"106","hashOfConfig":"58"},{"size":2986,"mtime":1635863449282,"results":"107","hashOfConfig":"58"},{"size":2730,"mtime":1637257364959,"results":"108","hashOfConfig":"58"},{"size":917,"mtime":1635863449291,"results":"109","hashOfConfig":"58"},{"size":1092,"mtime":1635863449294,"results":"110","hashOfConfig":"58"},{"size":1436,"mtime":1635863449288,"results":"111","hashOfConfig":"58"},{"size":2435,"mtime":1635863449282,"results":"112","hashOfConfig":"58"},{"size":404,"mtime":1635863449288,"results":"113","hashOfConfig":"58"},{"size":1814,"mtime":1635863449283,"results":"114","hashOfConfig":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},"19xfqg6",{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"3gru6d",{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"133"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"169"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"169"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"133"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"133"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/App.js",["239","240","241","242","243","244","245"],"import React, {useEffect} from \"react\";\nimport {Route, Switch, withRouter, useLocation, useHistory } from 'react-router-dom';\n// import $ from \"jquery\";\nimport AuthLayout from \"./layout/AuthLayout\";\nimport MainLayout from \"./layout/MainLayout\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n// import Home from \"./screens/Home\";\nimport {ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport AdminRoute from \"./components/AdminRoute\";\nimport AdminLayout from \"./layout/AdminLayout\";\n// import Admin from \"./screens/Admin\";\nimport {bindActionCreators} from \"redux\";\nimport {connect} from \"react-redux\";\nimport * as Utils from \"./utils/index\";\nimport 'react-dropzone-uploader/dist/styles.css'\nimport {useDispatch} from \"react-redux\";\nimport moment from \"moment\"\nimport \"./App.scss\";\n// import UserLayout from \"./layout/UserLayout\";\n// import UserRoute from \"./components/UserRoute\";\n// import UnderConstruction from \"./screens/CommonScreen/UnderConstruction\";\n\nimport {fetchLoginReset} from \"./redux/actions/AuthActions\";\n\nlet route = require('./utils/route');\n\nfunction App(props) {\n\n    let location = useLocation();\n    const dispatch = useDispatch();\n    let history = useHistory();\n\n    const disconnect = () => {\n        localStorage.clear();\n        dispatch(fetchLoginReset());\n        //history.go(\"/\");\n        window.location.href = \"/\";\n    };\n\n    useEffect(() => {\n        let connect_try = localStorage.getItem(\"USER_CONNECT_TRY\");\n        if(connect_try != undefined) {\n            let number = parseInt(connect_try)\n            let last_try_date = localStorage.getItem(\"USER_CONNECTED_TRY_DATE\")\n            if(last_try_date != undefined) {\n                let now = moment(new Date().toISOString());\n                let date = moment(last_try_date)\n                var daysLeft = now.diff(date,\"days\")\n                if( daysLeft > 1) {\n                    localStorage.removeItem(\"USER_CONNECT_TRY\");\n                    localStorage.removeItem(\"USER_CONNECTED_TRY_DATE\");\n                }\n            }\n        } else {\n            localStorage.setItem(\"USER_CONNECT_TRY\", '0');\n        }\n        let date_con = moment(localStorage.getItem(\"DATE_CONNECTED\"));\n        let now = moment(new Date().toISOString());\n        let user = localStorage.getItem(\"USER\");\n        var checkTime;\n        if(user != undefined) {\n            var secondsLeft = now.diff(date_con,\"seconds\")\n            if( secondsLeft >= 600 ) {\n                disconnect();\n            } else {\n                localStorage.setItem(\"DATE_CONNECTED\", new Date().toISOString());\n                checkTime = setInterval(() => {\n                    let date_con = moment(localStorage.getItem(\"DATE_CONNECTED\"));\n                    let now = moment(new Date().toISOString());\n                    let user = localStorage.getItem(\"USER\");\n                    var secondsLeft = now.diff(date_con,\"seconds\")\n                    console.log(\"secondsLeft : \" + secondsLeft)\n                    if( now.diff(date_con,\"seconds\") >= 600 ) {\n                        disconnect();\n                    }\n                }, 1000)\n            }\n        }\n        else if( now.diff(date_con,\"seconds\") >= 600 ) {\n            disconnect()\n        }\n\n        return () => {\n            clearInterval(checkTime);\n        }\n    }, [location])\n\n    return (\n        <div className=\"App\">\n            <Switch>\n                <Route path=\"/auth/:page\" component={AuthLayout}/>\n                {/* <Route path=\"/under-construction\" component={UnderConstruction} /> */}\n{/* \n                {\n                    (props.result !== null || Utils.isConnected()) &&\n                    props.location.pathname.includes(route.user_admin_url[1].link) ?\n                        <UserRoute path=\"/my-space/:page\">\n                            <UserLayout/>\n                        </UserRoute> :\n                        <PrivateRoute path=\"/:page\">\n                            <MainLayout/>\n                        </PrivateRoute>\n                }\n\n                {\n                    (props.result !== null || Utils.isConnected()) &&\n                    props.location.pathname.includes(route.user_admin_url[1].link) ?\n                        <UserRoute path=\"/my-space\">\n                            <UserLayout/>\n                        </UserRoute> :\n                        <PrivateRoute path=\"/\">\n                            <MainLayout/>\n                        </PrivateRoute>\n                } */}\n                {\n                    (props.result !== null || Utils.isConnected()) &&\n                    props.location.pathname.includes(route.admin_url[1].link) ?\n                        <AdminRoute path=\"/admin/:page\">\n                            <AdminLayout/>\n                        </AdminRoute> :\n                        <PrivateRoute path=\"/:page\">\n                            <MainLayout/>\n                        </PrivateRoute>\n                }\n\n                {\n                    (props.result !== null || Utils.isConnected()) &&\n                    props.location.pathname.includes(route.admin_url[1].link) ?\n                        <AdminRoute path=\"/admin\">\n                            <AdminLayout/>\n                        </AdminRoute> :\n                        <PrivateRoute path=\"/\">\n                            <MainLayout/>\n                        </PrivateRoute>\n                }\n\n            </Switch>\n            <ToastContainer/>\n        </div>\n    );\n}\n\nconst mapstateToProps = state => ({\n    result: state.signInReducer.result\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({}, dispatch);\n\nexport default withRouter(connect(mapstateToProps, mapDispatchToProps)(App));\n\n\n","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/store/index.js",[],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/reducers/PostsReducer/DeletePostReducer.js",["246"],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/reducers/GlossaryReducer/GetAllGlossaryReducer.js",["247"],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/reducers/CategoryReducer/ModifyCategoryReducer.js",["248"],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/types/PostsType.js",[],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/layout/FaqLayout/index.js",[],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/screens/Admin/FAQ/index.js",["249","250","251","252","253","254","255","256","257","258","259","260"],"import React, {useState, useEffect} from 'react';\nimport {Helmet} from \"react-helmet\";\nimport {useTranslation} from \"react-i18next\";\nimport {NavLink, useParams, useHistory, withRouter} from \"react-router-dom\";\nimport RichTextEditor from \"../../../components/RichTextEditor\";\nimport {Input} from \"../../../components/Input\";\nimport {TextArea} from \"../../../components/TextArea/TextArea\";\nimport {useForm} from \"react-hook-form\";\nimport {bindActionCreators} from 'redux';\nimport {Constant} from \"../../../config/Constant\";\nimport * as moment from \"../../Glossary\";\nimport $ from \"jquery\";\nimport {\n    getAllPostsAction,\n    getAllPostsByDomaineAction,\n    getAllPostsByDomaineReset,\n    getAllPostsReset\n} from \"../../../redux/api/PostsApi\";\nimport {connect} from \"react-redux\";\nimport {postFaqAction, postFaqReset} from \"../../../redux/api/FaqApi\";\nimport * as Utils from \"../../../utils\";\nimport {getAllDomaineAction} from \"../../../redux/api/DomaineApi\";\nimport {validatePublicationAction, validatePublicationReset} from \"../../../redux/api/ValidationApi\";\nimport {toast} from \"react-toastify\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCheck} from \"@fortawesome/free-solid-svg-icons\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\n\nlet route = require('../../../utils/route');\n\nfunction AdminFAQ(props) {\n    const {t} = useTranslation();\n    let {id, page, domaine} = useParams();\n    const {register, handleSubmit, errors} = useForm();\n    let history = useHistory();\n\n    const [currentPath, setCurrentPath] = useState(props.location.pathname);\n    const [search, setSearch] = useState('');\n    const [thematique, setThematique] = useState(1);\n    const [answer, setAnswer] = useState('');\n    const [answerToModify, setAnswerToModify] = useState('');\n    const [questionToModify, setQuestionToModify] = useState('');\n    const [thematiqueToModify, setThematiqueToModify] = useState('');\n    const [contentId, setContentId] = useState('');\n    const [question, setQuestion] = useState('');\n    const [enabled, setEnabled] = useState(1);\n\n    const onSubmitFaq = () => {\n        props.postFaqAction({\n            rhContentTitle: question,\n            rhContentDescription: answer,\n            rhContentCategoryId: Constant.faqID,\n            rhContentDomaineId: parseInt(thematique),\n            rhContentDatePublish: moment(new Date()).format(\"YYYY-MM-DD\"),\n            userId: Utils.getUserConnected().userId\n        });\n    };\n\n    const onModifyFaq = () => {\n        props.validatePublicationAction({\n            rhContentId: contentId,\n            rhContentDescription: answerToModify,\n            rhContentValidationIsValidated: enabled === 1,\n            userId: Utils.getUserConnected().userId\n        });\n    }\n\n    useEffect(() => {\n        console.log(props.result);\n        if (props.resultValidatePublication !== null) {\n            toast.dark(t('faq.modify_success'), {\n                position: \"top-right\",\n                autoClose: Constant.toastDelay,\n                hideProgressBar: true,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: false,\n                progress: undefined,\n            });\n            history.go(0);\n            props.validatePublicationReset();\n        }\n        if (props.errorValidatePublication !== null) {\n            toast.error(props.errorValidatePublication, {\n                position: \"top-right\",\n                autoClose: Constant.toastDelay,\n                hideProgressBar: true,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: false,\n                progress: undefined,\n            });\n            props.validatePublicationReset();\n        }\n    }, [props]);\n\n    useEffect(() => {\n        props.getAllDomaineAction();\n        props.getAllPostsReset();\n        props.getAllPostsAction(Constant.faqID);\n    }, []);\n\n\n    const renderModalAddFaq = () => (\n        <div className=\"modal fade\" id=\"addFaqModal\" data-backdrop=\"static\" data-keyboard=\"false\" tabIndex=\"-1\"\n             aria-labelledby=\"addFaqModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"addFaqModalLabel\">{t('faq.new_faq')}</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n                            <span className=\"sr-only\">{t('common.click_to_close')}</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n\n                                <form className=\"row\" id=\"PostAdminEditForm\" onSubmit={handleSubmit(onSubmitFaq)}>\n\n                                    <div className=\"col-12\">\n                                        <label htmlFor=\"postThematique\"\n                                               className=\"is-required\">{t('common.thematique')}</label>\n                                        {\n                                            props.loadingGetDomaine ?\n                                                <select className=\"custom-select\"\n                                                        id=\"postThematique\" disabled>\n                                                </select> :\n                                                props.resultGetDomaine !== null &&\n                                                <select className=\"custom-select\"\n                                                        id=\"postThematique\">\n                                                    {\n                                                        props.resultGetDomaine.map((domaine, index) => (\n                                                            <option value={domaine.rhContentDomaineId}\n                                                                    key={`domaine${index}`}>{domaine.rhContentDomaineName}</option>\n                                                        ))\n                                                    }\n                                                </select>\n                                        }\n\n                                    </div>\n\n                                    <div className=\"col-12 mt-3\">\n\n                                        <Input wrapperClass=\"form-group\"\n                                               inputClass=\"form-control\"\n                                               type=\"text\"\n                                               name=\"question\"\n                                               required\n                                               ref={register({required: true, maxLength: 255})}\n                                               id=\"question\"\n                                               value={question}\n                                               onChange={(e) => setQuestion(e.target.value)}\n                                               error={errors.hasOwnProperty(\"question\")}\n                                               errorText={t('error.required_field')}\n                                               labelText={t('faq.question')}\n                                               maxLength=\"255\"\n                                        />\n\n                                    </div>\n\n                                    <div className=\"col-12\">\n                                        {/* <TextArea wrapperClass=\"form-group\"\n                                                  inputClass=\"form-control\"\n                                                  name=\"answer\"\n                                                  required\n                                                  style={{height: \"106px\"}}\n                                                  ref={register({required: true})}\n                                                  id=\"answer\"\n                                                  value={answer}\n                                                  onChange={(e) => setAnswer(e.target.value)}\n                                                  error={errors.hasOwnProperty(\"answer\")}\n                                                  errorText={t('error.required_field')}\n                                                  labelText={t('faq.answer')}\n                                        /> */}\n\n                                        <RichTextEditor\n                                            wrapperClass=\"form-group\"\n                                            inputClass=\"form-control\"\n                                            name=\"answer\"\n                                            required\n                                            style={{height: \"106px\"}}\n                                            ref={register({required: true})}\n                                            id=\"answer\"\n                                            value={answer}\n                                            onChange={(e) => setAnswer(e.target.value)}\n                                            error={errors.hasOwnProperty(\"answer\")}\n                                            errorText={t('error.required_field')}\n                                            labelText={t('faq.answer')}\n                                            onBlur={value => { setAnswer(value); } } // preferred to use only this option to update the content for performance reasons\n                                        />\n                                    </div>\n\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-secondary\"\n                                data-dismiss=\"modal\">{t('common.close')}</button>\n                        {\n                            props.loadingPostFaq ?\n                                <button className=\"btn btn-primary\" type=\"button\" disabled>\n                                        <span className=\"spinner-border spinner-border-sm\" role=\"status\"\n                                              aria-hidden=\"true\"/>\n                                    <span className=\"sr-only\">{t('common.loading')}</span>\n                                </button> :\n                                <button type=\"button\" className=\"btn btn-primary\"\n                                        onClick={handleSubmit(onSubmitFaq)}>{t('common.post')}</button>\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n    const renderModalModifyFaq = () => (\n        <div className=\"modal fade\" id=\"answerFaqModalLabel\" data-backdrop=\"static\" data-keyboard=\"false\" tabIndex=\"-1\"\n             aria-labelledby=\"answerFaqModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"addFaqModalLabel\">{t('faq.answer_question')}</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n                            <span className=\"sr-only\">{t('common.click_to_close')}</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n\n                                <form className=\"row\" id=\"PostAdminEditForm\">\n\n                                    <div className=\"col-12\">\n                                        <Input wrapperClass=\"form-group\"\n                                               inputClass=\"form-control\"\n                                               type=\"text\"\n                                               disabled\n                                               name=\"postThematiqueToModify\"\n                                               id=\"postThematiqueToModify\"\n                                               value={thematiqueToModify}\n                                               errorText={t('error.required_field')}\n                                               labelText={t('common.thematique')}\n                                               maxLength=\"255\"\n                                        />\n\n                                    </div>\n\n                                    <div className=\"col-12\">\n\n                                        <Input wrapperClass=\"form-group\"\n                                               inputClass=\"form-control\"\n                                               type=\"text\"\n                                               disabled\n                                               name=\"questionToAnswer\"\n                                               required\n                                               id=\"questionToAnswer\"\n                                               value={questionToModify}\n                                               errorText={t('error.required_field')}\n                                               labelText={t('faq.question')}\n                                               maxLength=\"255\"\n                                        />\n\n                                    </div>\n\n\n                                    <fieldset className=\"form-group col-12\">\n                                        <div id=\"radio-action\" className=\"form-inline\">\n                                            <div className=\"custom-control custom-switch\">\n                                                <input type=\"checkbox\"\n                                                       checked={enabled === 1}\n                                                       onChange={(e) => setEnabled(e.target.checked ? 1 : 0)}\n                                                       className=\"custom-control-input\" id=\"customSwitch1\"/>\n                                                <label className=\"custom-control-label\"\n                                                       htmlFor=\"customSwitch1\">{t('faq.publish_faq_state')}</label>\n                                            </div>\n                                        </div>\n                                    </fieldset>\n\n                                    <div className=\"col-12\">\n                                        <TextArea wrapperClass=\"form-group\"\n                                                  inputClass=\"form-control\"\n                                                  name=\"answerToModify\"\n                                                  required\n                                                  disabled={enabled === 0}\n                                                  style={{height: \"106px\"}}\n                                                  id=\"answerToModify\"\n                                                  onChange={(e) => setAnswerToModify(e.target.value)}\n                                                  value={answerToModify}\n                                                  error={answerToModify === ''}\n                                                  errorText={t('error.required_field')}\n                                                  labelText={t('faq.answer')}\n                                        />\n                                    </div>\n\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-secondary\"\n                                data-dismiss=\"modal\">{t('common.close')}</button>\n                        {\n                            props.loadingValidatePublication ?\n                                <button className=\"btn btn-primary\" type=\"button\" disabled>\n                                        <span className=\"spinner-border spinner-border-sm\" role=\"status\"\n                                              aria-hidden=\"true\"/>\n                                    <span className=\"sr-only\">{t('common.loading')}</span>\n                                </button> :\n                                <button type=\"button\" className=\"btn btn-primary\"\n                                        onClick={() => {\n                                            if (answerToModify !== '') onModifyFaq();\n                                        }}>{t('common.save')}</button>\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n    const renderFaqTable = (data) => (\n        <table className=\"table table-striped table-responsive-lg table-hover has-icon col-12\">\n            {/*\n            <caption>Icons table</caption>\n*/}\n            <thead>\n            <tr>\n                <th className=\"text-center\">{t('common.status')}</th>\n                <th className=\"text-left\">{t('faq.question')}</th>\n                <th className=\"text-left\">{t('faq.answer')}</th>\n                <th className=\"text-left\">{t('common.domain')}</th>\n                <th className=\"text-left\">{t('common.author')}</th>\n            </tr>\n            </thead>\n            <tbody>\n            {\n                data.map((faq, index) => (\n                    <tr key={index} className=\"faq-item\" onClick={() => {\n                        $('#btnModal').trigger('click');\n                        setContentId(faq.rhContentId);\n                        setQuestionToModify(faq.rhContentTitle);\n                        setThematiqueToModify(faq.rhContentDomaine.rhContentDomaineName);\n                        setAnswerToModify(faq.rhContentDescription);\n                    }}>\n                        <td className=\"text-left\">\n                            {\n                                faq.rhContentIsOK ?\n                                    <FontAwesomeIcon icon={faCheck} color='var(--success)' className=\"mr-1\"/> :\n                                    <FontAwesomeIcon icon={faTimes} color='var(--danger)' className=\"mr-1\"/>\n                            }\n                        </td>\n                        <th className=\"text-left\">{faq.rhContentTitle}</th>\n                        <th className=\"text-left\">{Utils.cutString(faq.rhContentDescription, 70)}</th>\n                        <th className=\"text-left\">{faq.rhContentDomaine.rhContentDomaineName}</th>\n                        <th className=\"text-left\">{faq.user.userName}</th>\n                    </tr>\n                ))\n            }\n            </tbody>\n        </table>\n    );\n\n    const handleSearch = () => {\n\n    }\n\n    return (\n        <>\n            <div className=\"container-fluid\">\n                <Helmet>\n                    <title>{`${t(\"app.name\")} - ${t('faq.title')}`}</title>\n                </Helmet>\n                <h1>{t(\"faq.title\")}</h1>\n\n                <div className=\"row\">\n                    <div className=\"col-12 o-layer\">\n                        {renderModalAddFaq()}\n                        {renderModalModifyFaq()}\n                        <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" id=\"btnModal\"\n                                style={{display: \"none\"}} data-target=\"#answerFaqModalLabel\"/>\n                        <div className=\"row mb-3\">\n                            {/*                            <div className=\"col-auto mr-auto\">\n                                <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\"\n                                        data-target=\"#addFaqModal\">\n                                    <span className=\"icon icon-Add\" aria-hidden=\"true\"/>\n                                    {t('faq.new_faq')}\n                                </button>\n                            </div>*/}\n                            <div className=\"col-auto\">\n                                <div className=\"input-group\">\n                                    <input type=\"text\" className=\"form-control\" placeholder={t('posts.find_post')}\n                                           aria-label={t('posts.find_post')} aria-describedby=\"button-addon2\"\n                                           value={search} onChange={(e) => {\n                                        setSearch(e.target.value);\n                                        handleSearch();\n                                    }}/>\n                                    <div className=\"input-group-append\">\n                                        <button type=\"button\" className=\"btn btn-secondary btn-icon\">\n                                            <span className=\"sr-only\">Icon</span>\n                                            <span className=\"icon icon-search\" aria-hidden=\"true\"></span>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"mt-4\">\n                            <div className=\"media-body\">\n                                {props.result !== null && renderFaqTable(props.result)}\n                            </div>\n                        </div>\n                    </div>\n\n\n                </div>\n            </div>\n        </>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    loading: state.getAllPostsReducer.loading,\n    result: state.getAllPostsReducer.result,\n    error: state.getAllPostsReducer.error,\n\n    loadingPostGlossary: state.postGlossaryReducer.loading,\n    resultPostGlossary: state.postGlossaryReducer.result,\n    errorPostGlossary: state.postGlossaryReducer.error,\n\n    loadingGetDomaine: state.getAllDomainesReducer.loading,\n    resultGetDomaine: state.getAllDomainesReducer.result,\n    errorGetDomaine: state.getAllDomainesReducer.error,\n\n    loadingValidatePublication: state.validatePublicationReducer.loading,\n    resultValidatePublication: state.validatePublicationReducer.result,\n    errorValidatePublication: state.validatePublicationReducer.error,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    getAllPostsAction,\n    getAllPostsReset,\n\n    getAllDomaineAction,\n    validatePublicationAction,\n    validatePublicationReset,\n\n    postFaqAction,\n    postFaqReset,\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AdminFAQ));\n\n",["261","262"],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/screens/Posts/PostDetail/index.js",["263","264","265","266","267","268","269","270","271","272","273","274","275","276"],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/types/BlogType.js",[],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/components/SecondaryNavigation/index.js",["277"],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/components/PostList/index.js",["278","279","280","281"],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/actions/ImageActions.js",[],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/reducers/PostsReducer/AddNewPostReducer.js",["282"],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/api/NotificationAPi.js",[],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/utils/index.js",["283"],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/screens/Blog/BlogDetail/index.js",["284","285","286","287","288","289","290","291"],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/api/DomaineApi.js",[],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/api/BlogApi.js",[],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/screens/Admin/Posts/EditPost/index.js",["292","293","294","295","296","297","298","299","300","301"],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/actions/FaqActions.js",[],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/components/RichTextEditor/index.js",[],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/components/Comment/index.js",["302"],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/reducers/DomaineReducer/CreateDomaineReducer.js",["303"],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/layout/PostLayout/index.js",["304","305"],"import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport NewPost from \"../../screens/Admin/Posts/NewPost/NewPost\";\nimport PostDetail from \"../../screens/Posts/PostDetail\";\nimport Posts from \"../../screens/Posts/index\";\n\nlet route = require('../../utils/route');\n\n\nexport default function PostLayout(props) {\n\n    console.log(\"PostLayout call\");\n    return (\n        <>\n            <Switch>\n                <Route path={route.post.post_domain} component={Posts}/>\n                <Route path={route.post.post_category} component={Posts}/>\n            </Switch>\n        </>\n    )\n}\n",["306","307"],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/screens/SignIn/index.js",["308","309","310","311","312","313"],"import React, {useState, useEffect} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {Images} from \"../../config/Images\";\nimport TitleUnderlined from \"../../components/TitleUnderlined\";\nimport {NavLink} from \"react-router-dom\";\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {useHistory} from 'react-router-dom';\nimport {useForm} from \"react-hook-form\";\nimport {signInAction, signInReset} from \"../../redux/api/SignInApi\";\nimport {Input} from '../../components/Input';\n\nlet route = require('../../utils/route');\n\nfunction SignIn(props) {\n    const {t} = useTranslation();\n    const {register, handleSubmit, errors} = useForm();\n    const [login, setLogin] = useState('');\n    const [password, setPassword] = useState('');\n    const [hasErrorExecution, setHasErrorExecution] = useState(false);\n    const [isSubmit, setIsSubmit] = useState(false);\n    let history = useHistory();\n\n    useEffect(() => {\n        if (props.result !== null) {\n            localStorage.setItem('USER', JSON.stringify(props.result));\n            localStorage.setItem('DATE_CONNECTED', JSON.stringify(new Date().toISOString()));\n            history.push(route.home.root);\n            //window.location.href = route.home.root;\n        }\n\n    }, [props]);\n\n    const onLogin = () => {\n        console.log(errors);\n        console.log(\"data checked\",password);\n        props.signInAction(login, password)\n    };\n\n\n    console.log(props);\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row justify-content-md-center\">\n                <div className=\"col-lg-8\">\n                    <div className=\"shadow bg-white rounded d-flex\">\n                        <div className=\"row\">\n                            <div className=\"col align-self-start\">\n                                <img src={Images.signInBanner} className=\"img-fluid\" alt=\"Sign In Banner\"/>\n                            </div>\n                            <div className=\"col-md-6 aligb-self-start\">\n                                <div className=\"pl-2 pr-4 pt-4 pb-4 mt-2 mb-5\">\n                                    <div className=\"col-12 p-0\">\n                                        <TitleUnderlined\n                                            customClass=\"mb-2 mb-xl-3\">{t('signin.title')}</TitleUnderlined>\n                                    </div>\n                                    <form className=\"mt-4\" onSubmit={handleSubmit(onLogin)}>\n\n                                        <Input wrapperClass=\"form-group mb-4\"\n                                               inputClass=\"form-control\"\n                                               type=\"text\"\n                                               name=\"login\"\n                                               ref={register({required: true})}\n                                               id=\"login\"\n                                               value={login}\n                                               onChange={(e) => setLogin(e.target.value)}\n                                               error={errors.hasOwnProperty(\"login\")}\n                                               errorText={t('error.required_field')}\n                                               labelText={t('common.ccuid')}\n                                               placeholder={t('signin.enter_ccuid')}/>\n\n                                        <Input wrapperClass=\"form-group mb-4\"\n                                               inputClass=\"form-control\"\n                                               type=\"password\"\n                                               name=\"password\"\n                                               ref={register({required: true})}\n                                               id=\"password\"\n                                               value={password}\n                                               onChange={(e) => setPassword(e.target.value)}\n                                               error={errors.hasOwnProperty(\"password\")}\n                                               errorText={t('error.required_field')}\n                                               labelText={t('common.password')}\n                                               placeholder={t('signin.enter_password')}/>\n\n                                        <div className=\"custom-control custom-checkbox mb-4\">\n                                            <input type=\"checkbox\" className=\"custom-control-input\" id=\"submitButton\"/>\n                                            <label className=\"custom-control-label\"\n                                                   htmlFor=\"exampleCheck1\">{t('signin.remember_me')}</label>\n                                        </div>\n\n                                        {\n                                            props.loading ?\n                                                <button className=\"btn btn-primary\" type=\"button\" disabled>\n                                                    <span className=\"spinner-border spinner-border-sm\" role=\"status\"\n                                                          aria-hidden=\"true\"/>\n                                                    <span className=\"sr-only\">{t('common.loading')}</span>\n                                                </button> :\n                                                <button className=\"btn btn-primary\"\n                                                        onClick={() => handleSubmit(onLogin)}>\n                                                    {t('signin.connect')}\n                                                </button>\n                                        }\n\n\n                                        {\n                                            props.error !== null &&\n                                            <div className=\"alert alert-danger mt-1\" role=\"alert\">\n                                                <span className=\"alert-icon\"><span\n                                                    className=\"sr-only\">Danger</span></span>\n                                                <p>{props.error.data}</p>\n                                            </div>\n                                        }\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nconst mapStateToProps = state => ({\n    loading: state.signInReducer.loading,\n    result: state.signInReducer.result,\n    error: state.signInReducer.error,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    signInAction,\n    signInReset\n\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/screens/Admin/Blog/NewBlog/index.js",["314","315","316","317","318","319","320","321"],"import React, {useEffect, useMemo, useRef, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {useForm} from \"react-hook-form\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from 'redux';\nimport {useHistory} from \"react-router-dom\";\nimport {Input} from \"../../../../components/Input\";\nimport {getAllDomaineAction} from \"../../../../redux/api/DomaineApi\";\nimport {useDropzone} from 'react-dropzone';\nimport * as Utils from '../../../../utils';\nimport {Constant} from \"../../../../config/Constant\";\nimport {toast} from 'react-toastify';\nimport * as moment from 'moment';\nimport {Helmet} from \"react-helmet\";\nimport {postBlogAction, postBlogReset} from \"../../../../redux/api/BlogApi\";\nimport {uploadImageAction} from \"../../../../redux/api/ImageApi\";\nimport RichTextEditor from \"../../../../components/RichTextEditor\";\n\nlet route = require('../../../../utils/route');\n\nfunction NewBlog(props) {\n    const {t} = useTranslation();\n    const {register, handleSubmit, errors} = useForm();\n    let history = useHistory();\n    const editor = useRef(null);\n    const [title, setTitle] = useState('');\n    const [date, setDate] = useState(null);\n    const [dateFin, setDateFin] = useState(null);\n    const [thematique, setThematique] = useState(1);\n    const [image, setImage] = useState(new FormData());\n    const [contenu, setContenu] = useState('');\n    const [featured, setFeatured] = useState(0);\n    const [isDataSubmit, setIsDataSubmit] = useState(false);\n    const [uploadedImages, setUploadedImages] = useState([]);\n    const [files, setFiles] = useState([]);\n    const {\n        getRootProps,\n        getInputProps,\n        isDragActive,\n        isDragAccept,\n        isDragReject\n    } = useDropzone({\n        accept: \".jpeg,.png,.gif,.jpg,.svg\",\n        maxFiles: 1,\n        multiple: false,\n        onDrop: acceptedFiles => {\n            console.log(acceptedFiles);\n            acceptedFiles.map(file => {\n                let imageToSend = new FormData();\n                imageToSend.append(\"file\", file);\n                props.uploadImageAction(imageToSend);\n            });\n            setFiles(acceptedFiles.map(file => Object.assign(file, {\n                preview: URL.createObjectURL(file)\n            })));\n        }\n    });\n\n    const style = useMemo(() => ({\n        ...Utils.baseStyle,\n        ...(isDragActive ? Utils.activeStyle : {}),\n        ...(isDragAccept ? Utils.acceptStyle : {}),\n        ...(isDragReject ? Utils.rejectStyle : {})\n    }), [\n        isDragActive,\n        isDragReject,\n        isDragAccept\n    ]);\n\n    const Thumbs = files.map(file => (\n        <div style={Utils.thumbStyle} key={file.name}>\n            <div style={Utils.thumbInnerStyle}>\n                {\n                    props.loadingUpdloadPhoto &&\n                    <div className=\"d-flex text-center justify-content-center thumb-loader\">\n                        <div className=\"spinner-grow text-primary\" role=\"status\">\n                            <span className=\"sr-only\">{t('common.loading')}</span>\n                        </div>\n                    </div>\n                }\n                <img\n                    src={file.preview}\n                    loading=\"lazy\"\n                    style={Utils.imgStyle}\n                />\n            </div>\n        </div>\n    ));\n\n    useEffect(() => () => {\n        // Make sure to revoke the data uris to avoid memory leaks\n        files.forEach(file => URL.revokeObjectURL(file.preview));\n    }, [files]);\n\n    const onSubmitPost = () => {\n        setIsDataSubmit(true);\n        props.postBlogAction({\n            rhContentTitle: title,\n            rhContentDescription: contenu,\n            rhContentPriorityLevel: featured,\n            rhContentCategoryId: Constant.blogID,\n            rhContentDomaineId: parseInt(thematique),\n            rhContentPrincipalLink: props.resultUploadImage !== null ? props.resultUploadImage.imageName : \"\",\n            rhContentDatePublish: date !== null ? moment(date).format(\"YYYY-MM-DD\") : moment().format(\"YYYY-MM-DD\"),\n            rhContentDateOnPublish: dateFin === null ? moment(moment().add(1, 'y')).format(\"YYYY-MM-DD\") : moment(dateFin).format(\"YYYY-MM-DD\"),\n            userId: Utils.getUserConnected().userId\n        });\n    }\n\n    useEffect(() => {\n        props.getAllDomaineAction();\n    }, []);\n\n    useEffect(() => {\n        console.log(props.result);\n        if (props.result !== null) {\n            toast.dark(t('add_new_blog.success'), {\n                position: \"top-right\",\n                autoClose: Constant.toastDelay,\n                hideProgressBar: true,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: false,\n                progress: undefined,\n            });\n            history.push(route.blog.root);\n            props.postBlogReset();\n        }\n        if (props.error !== null) {\n            toast.error(t(Utils.displayErrorRequest(props.error)), {\n                position: \"top-right\",\n                autoClose: Constant.toastDelay,\n                hideProgressBar: true,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: false,\n                progress: undefined,\n            });\n            props.postBlogReset();\n        }\n\n        if (props.resultDomaine !== null) {\n            console.log(\"Domaine has lodaded\",props.resultDomaine.filter(domaine => domaine.rhContentCategoryId === Constant.blogID)[0].rhContentDomaineId);\n            setThematique(props.resultDomaine.filter(domaine => domaine.rhContentCategoryId === Constant.blogID)[0].rhContentDomaineId);\n        }\n    }, [props]);\n\n    console.log(\"Thematique\", parseInt(thematique));\n\n    return (\n        <>\n            <Helmet>\n                <title>{`${t(\"app.name\")} - ${t(\"add_new_blog.title\")}`}</title>\n            </Helmet>\n            <div className=\"container-fluid\">\n                <h1>{t(\"add_new_blog.title\")}</h1>\n            </div>\n\n            <section className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <form className=\"row\" id=\"PostAdminEditForm\" onSubmit={handleSubmit(onSubmitPost)}>\n                            <div className=\"col-12 col-lg-4\">\n\n                                <Input wrapperClass=\"form-group\"\n                                       inputClass=\"form-control\"\n                                       type=\"text\"\n                                       name=\"title\"\n                                       required\n                                       ref={register({required: true, maxLength: 255})}\n                                       id=\"title\"\n                                       value={title}\n                                       onChange={(e) => setTitle(e.target.value)}\n                                       error={errors.hasOwnProperty(\"title\")}\n                                       errorText={t('error.required_field')}\n                                       labelText={t('add_new_blog.blog_title')}\n                                       maxLength=\"255\"\n                                />\n\n                                <Input wrapperClass=\"form-group\"\n                                       inputClass=\"form-control\"\n                                       type=\"date\"\n                                       name=\"date\"\n                                       id=\"date\"\n                                       value={date}\n                                       onChange={(e) => {\n                                           setDate(e.target.value);\n                                           console.log(e.target.value);\n                                       }}\n                                       errorText={t('error.date_incorrect')}\n                                       labelText={t('add_post.publication_date')}\n                                       title={t('add_post.expected_format')}\n                                >\n                                    <span className=\"form-text small text-muted\"\n                                          id=\"date-format\">{t('add_post.expected_format')}</span>\n                                </Input>\n\n                                <Input wrapperClass=\"form-group\"\n                                       inputClass=\"form-control\"\n                                       type=\"date\"\n                                       name=\"dateFin\"\n                                       id=\"dateFin\"\n                                       value={dateFin}\n                                       onChange={(e) => {\n                                           setDateFin(e.target.value);\n                                           console.log(e.target.value);\n                                       }}\n                                       error={isDataSubmit ? dateFin !== null : false}\n                                       errorText={t('error.date_incorrect')}\n                                       labelText={t('add_post.publication_end_date')}\n                                       title={t('add_post.expected_format')}\n                                >\n                                    <span className=\"form-text small text-muted\"\n                                          id=\"date-format\">{t('add_post.expected_format')}</span>\n                                </Input>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"postThematique\"\n                                           className=\"is-required\">{t('common.thematique')}</label>\n                                    {\n                                        props.loadingDomaine ?\n                                            <select className=\"custom-select\"\n                                                    id=\"postThematique\" disabled>\n                                            </select> :\n                                            props.resultDomaine !== null &&\n                                            <select className=\"custom-select\"\n                                                    id=\"postThematique\"\n                                                    onChange={event => setThematique(event.target.value)}>\n                                                {\n                                                    props.resultDomaine.filter(domaine => domaine.rhContentCategoryId === Constant.blogID)\n                                                        .map((domaine, index) => (\n                                                            <option value={domaine.rhContentDomaineId}\n                                                                    key={`domaine${index}`}>{domaine.rhContentDomaineName}</option>\n                                                        ))\n                                                }\n                                            </select>\n                                    }\n\n                                </div>\n\n                                <div className=\"form-group mb-3\">\n                                    <label htmlFor=\"postThematique\"\n                                           className={`is-required ${(files.length === 0) && \"is-invalid\"}`}>{t('add_post.image')}</label>\n                                    <div {...getRootProps({style})}>\n                                        <input {...getInputProps()} />\n                                        {files.length === 0 && <p>{t('add_post.drad_drop_or_select')}</p>}\n                                        {Thumbs}\n                                    </div>\n\n                                    {files.length === 0 ?\n                                        isDataSubmit ?\n                                            <div className=\"invalid-feedback\">\n                                                {t('error.image_required')}\n                                            </div> : null : null}\n\n                                </div>\n\n                                <fieldset className=\"form-group\">\n                                    <div id=\"radio-action\" className=\"form-inline\">\n\n                                        <div className=\"custom-control custom-switch\">\n                                            <input type=\"checkbox\"\n                                                   onChange={(e) => setFeatured(e.target.checked ? 1 : 0)}\n                                                   className=\"custom-control-input\" id=\"customSwitch1\"/>\n                                            <label className=\"custom-control-label\"\n                                                   htmlFor=\"customSwitch1\">{t('add_post.featured')}</label>\n                                        </div>\n                                    </div>\n                                </fieldset>\n\n                                <div className=\"submit mt-3\">\n\n                                    {\n                                        props.loading ?\n                                            <button className=\"btn btn-primary\" type=\"button\" disabled>\n                                                    <span className=\"spinner-border spinner-border-sm\" role=\"status\"\n                                                          aria-hidden=\"true\"/>\n                                                <span className=\"sr-only\">{t('common.loading')}</span>\n                                            </button> :\n                                            <button className=\"btn btn-primary\"\n                                                    onSubmit={handleSubmit(onSubmitPost)}>{t('common.post')}</button>\n                                    }\n                                </div>\n                            </div>\n                            <div className=\"col-12 col-lg-8\">\n                                <div className=\"form-group required\">\n                                    <label htmlFor=\"PostContent\"\n                                           className=\"is-required\">{t('add_post.contenu')}</label>\n                                    <RichTextEditor ref={editor}\n                                                    value={contenu}\n                                                    onBlur={event => setContenu(event.target.innerHTML)} // preferred to use only this option to update the content for performance reasons\n                                    />\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n};\n\nconst mapStateToProps = state => ({\n    loading: state.postBlogReducer.loading,\n    result: state.postBlogReducer.result,\n    error: state.postBlogReducer.error,\n\n    loadingDomaine: state.getAllDomainesReducer.loading,\n    resultDomaine: state.getAllDomainesReducer.result,\n    errorDomaine: state.getAllDomainesReducer.error,\n\n    loadingUploadImage: state.uploadImageReducer.loading,\n    resultUploadImage: state.uploadImageReducer.result,\n    errorUploadImage: state.uploadImageReducer.error,\n\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    getAllDomaineAction,\n    uploadImageAction,\n\n    postBlogAction,\n    postBlogReset\n\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewBlog);\n","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/fakeData/index.js",[],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/reducers/CategoryReducer/GetAllCategoryReducer.js",["322"],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/components/GlossaryList/index.js",["323","324","325","326"],"import React, {useEffect, useState} from 'react';\nimport * as moment from \"moment\";\nimport {useTranslation} from \"react-i18next\";\nimport ReactPaginate from \"react-paginate\";\nimport {Constant} from \"../../config/Constant\";\nimport PropTypes from \"prop-types\";\nimport GlossaryItem from \"../GlossaryItem\";\n\nexport default function GlossaryList(props) {\n    moment.locale(\"fr\");\n    const {t} = useTranslation();\n    const [search, setSearch] = useState('');\n    const {\n        style,\n        onClick,\n        glossarys,\n        children,\n        ...rest\n    } = props;\n\n    const totalPosts = glossarys.length;\n    const totalPage = Math.ceil(totalPosts / Constant.glossaryPageLimit);\n\n    const [currentGlossarys, setCurrentGlossary] = useState(glossarys.slice(0, Constant.glossaryPageLimit));\n\n    useEffect(() => {\n        setCurrentGlossary(glossarys.slice(0, Constant.glossaryPageLimit));\n    }, [props.glossarys]);\n\n    const handlePageChange = data => {\n        const offset = (data.selected) * Constant.glossaryPageLimit;\n        setCurrentGlossary(glossarys.slice(offset, offset + Constant.glossaryPageLimit));\n    };\n    return (\n        <>\n            {\n                glossarys.length === 0 ?\n\n                    <div className=\"alert alert-info\" role=\"alert\">\n                        <span className=\"alert-icon\"><span className=\"sr-only\">Info</span></span>\n                        <p>{t('glossary.no_glossary')}</p>\n                    </div> :\n                    <>\n                        {\n                            currentGlossarys.map((item, index) => (\n                                <GlossaryItem category={item.category}\n                                              items={item.items}\n                                              indexKey={index}\n                                              key={`glossaire${index}`}/>\n\n                            ))\n                        }\n                    </>\n            }\n            <nav role=\"navigation\" aria-label=\"Pagination example with active span item\">\n                <ReactPaginate\n                    previousLabel={<span className=\"sr-only\"> {t('common.previous')}</span>}\n                    nextLabel={<span className=\"sr-only\"> {t('common.next')}</span>}\n                    breakLabel={'...'}\n                    breakClassName={'page-item'}\n                    breakLinkClassName={'page-link'}\n                    pageCount={totalPage}\n                    pageClassName={'page-item'}\n                    pageLinkClassName={'page-link'}\n                    marginPagesDisplayed={2}\n                    onPageChange={handlePageChange}\n                    previousClassName={'page-item'}\n                    previousLinkClassName={'page-link'}\n                    nextLinkClassName={'page-link'}\n                    nextClassName={'page-item'}\n                    pageRangeDisplayed={Constant.glossaryPageLimit}\n                    containerClassName={'pagination justify-content-center'}\n                    activeClassName={'active'}\n                />\n            </nav>\n        </>\n    )\n};\n\nGlossaryList.propTypes = {\n    style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    onClick: PropTypes.func,\n    glossarys: PropTypes.array\n};\n\nGlossaryList.defaultProps = {\n    style: {},\n    onClick: () => {\n    },\n    glossarys: []\n};\n","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/components/GlossaryItem/index.js",["327","328","329","330","331","332","333","334"],"import React, {useEffect, useState} from 'react';\nimport PropTypes from \"prop-types\";\nimport ReactPaginate from \"react-paginate\";\nimport {Constant} from \"../../config/Constant\";\nimport {useTranslation} from \"react-i18next\";\n\nexport default function GlossaryItem(props) {\n    const {\n        category,\n        items,\n        indexKey,\n        ...rest\n    } = props;\n\n    const totalPosts = items.length;\n    const totalPage = Math.ceil(totalPosts / Constant.glossaryPageLimit);\n\n    const [currentPosts, setCurrentGlossary] = useState(items.slice(0, Constant.glossaryPageLimit));\n    const {t} = useTranslation();\n\n    useEffect(() => {\n        setCurrentGlossary(items.slice(0, Constant.glossaryPageLimit));\n    }, [props.items]);\n\n    const handlePageChange = data => {\n        const offset = (data.selected) * Constant.glossaryPageLimit;\n        setCurrentGlossary(items.slice(offset, offset + Constant.glossaryPageLimit));\n    };\n    \n    const accordionId = Math.round(Math.random() * 10);\n    return (\n        <>\n            <ul className=\"list-unstyled\">\n\n                <li className=\"media mb-4\">\n                    <svg className=\"mr-3 h5\" width=\"64\" height=\"64\"\n                         xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid slice\"\n                         focusable=\"false\" role=\"img\">\n                        <rect width=\"100%\" height=\"100%\" fill=\"#999\"/>\n                        <text x=\"50%\" y=\"50%\" fill=\"#fff\" dy=\".3em\" dominant-baseline=\"middle\"\n                              text-anchor=\"middle\">{category}\n                        </text>\n                    </svg>\n\n                    <div className=\"media-body\">\n                        <div className=\"accordion\" id={`accordion-${indexKey}`}>\n                            {\n                                items.map((item, index) => (\n                                    <div className=\"card\" key={`glossairedescription${indexKey}${index}`}>\n                                        <div className=\"card-header\" id={`heading${indexKey}${index}`}>\n                                            <h4 className=\"mb-0\">\n                                                <button className=\"btn btn-link btn-block text-left\" type=\"button\"\n                                                        data-toggle=\"collapse\"\n                                                        data-target={`#collapse${indexKey}${index}`}\n                                                        aria-expanded=\"false\"\n                                                        aria-controls={`collapse${indexKey}${index}`}>\n                                                    {item.title}\n                                                </button>\n                                            </h4>\n                                        </div>\n                                        <div id={`collapse${indexKey}${index}`} className=\"collapse\"\n                                             aria-labelledby={`collapse${indexKey}${index}`}\n                                             data-parent={`#accordion-${indexKey}`}>\n                                            <div className=\"card-body\">\n                                                {item.description}\n                                            </div>\n                                        </div>\n                                    </div>\n                                ))\n                            }\n                        </div>\n                    </div>\n\n                </li>\n\n            </ul>\n\n        </>\n    );\n};\n\nGlossaryItem.propTypes = {\n    category: PropTypes.string,\n    items: PropTypes.array\n};\n\nGlossaryItem.defaultProps = {\n    category: \"\",\n    items: []\n};","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/lang/Language.ts",[],["335","336"],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/types/CommentType.js",[],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/reducers/TestimonialReducer/GetTestimonialReducer.js",["337"],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/layout/GlossaryLayout/index.js",[],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/components/Loader/index.js",["338","339"],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/config/ServerConfig.js",[],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/screens/Admin/Posts/PostCategory/index.js",["340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355"],"import React, {useEffect, useState} from 'react';\nimport {Helmet} from \"react-helmet\";\nimport {useTranslation} from \"react-i18next\";\nimport {NavLink, useHistory, withRouter} from \"react-router-dom\";\nimport {getAllPostsAction, getAllPostsReset} from \"../../../../redux/api/PostsApi\";\nimport {getAllDomaineAction} from \"../../../../redux/api/DomaineApi\";\nimport {validatePublicationAction, validatePublicationReset} from \"../../../../redux/api/ValidationApi\";\nimport {postFaqAction, postFaqReset} from \"../../../../redux/api/FaqApi\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from 'redux';\nimport * as Utils from \"../../../../utils\";\nimport {Constant} from \"../../../../config/Constant\";\nimport * as moment from \"moment\";\nimport \"moment/locale/fr\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCheck, faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport _ from \"lodash\";\nimport {Config} from \"../../../../config/ServerConfig\";\nimport CustomMaterialMenu from \"../../../../components/CustomMaterialMenu\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport DataTableComponent from \"../../../../components/DataTable\";\nimport ReactPlayer from \"react-player\";\nimport {Input} from \"../../../../components/Input\";\nimport {useForm} from \"react-hook-form\";\nimport {\n    createCategoryAction,\n    createCategoryReset,\n    getAllCategoryAction,\n    getAllCategoryReset, modifyCategoryAction, modifyCategoryReset\n} from \"../../../../redux/api/CategoryApi\";\nimport {toast} from \"react-toastify\";\nimport $ from \"jquery\";\n\n\nlet route = require('../../../../utils/route');\n\nfunction PostCategory(props) {\n    const {t} = useTranslation();\n    const [isModifyCategory, setIsModifyCategory] = useState(false);\n    const [idCategory, setIdCategory] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    const [search, setSearch] = useState('');\n    const [categories, setCategories] = useState([]);\n    const [categoriesPublished, setCategoriesPublished] = useState([]);\n    const [categoriesDeleted, setCategoryDeleted] = useState([]);\n    const [category, setCategory] = useState(\"\");\n    const [tabsActiveIndex, setTabsActiveIndex] = useState(0);\n    const {register, handleSubmit, errors} = useForm();\n    let history = useHistory();\n\n    const columns = [\n        {\n            name: t('common.status'),\n            selector: 'rhContentIsOK',\n            width: '100px',\n            sortable: true,\n            cell: post => post.rhContentCategoryState ?\n                <FontAwesomeIcon icon={faCheck} color='var(--success)' className=\"mr-1\"/> :\n                <FontAwesomeIcon icon={faTimes} color='var(--danger)' className=\"mr-1\"/>\n        },\n        {\n            name: t('add_post.title'),\n            selector: 'rhContentCategoryName',\n            sortable: true\n        },\n        {\n            name: t('add_post.publication_date'),\n            selector: 'rhContentDateCeated',\n            sortable: true,\n            format: d => moment(d.rhContentCategoryDateCreated).format(\"lll\")\n        },\n        {\n            name: t('common.actions'),\n            cell: row => <CustomMaterialMenu size=\"small\" row={row} firstButtonText={t('common.edit')}\n                                             secondButtonText={row.rhContentCategoryState ? t('common.unpublish') : t('common.publish')}\n                                             firstButtonAction={() => {\n                                                 setIsModifyCategory(true);\n                                                 setIdCategory(row.rhContentCategoryId);\n                                                 $('#category').val(row.rhContentCategoryName);\n                                                 $('#btnModal').trigger('click');\n                                                 $('.modal-title').html(t('common.categorie_modify'));\n                                                 $('.modal-footer .btn-primary').html(t('common.modify'));\n                                             }} secondButtonAction={() => {\n                props.modifyCategoryAction(row.rhContentCategoryId, {\n                    rhContentCategoryState: !row.rhContentCategoryState\n                });\n            }}/>,\n            allowOverflow: true,\n            button: true,\n        }\n\n    ];\n\n    useEffect(() => {\n        props.createCategoryReset();\n        props.getAllCategoryAction();\n    }, []);\n\n    useEffect(() => {\n        if (props.result !== null) {\n            setCategoryPublishedAction();\n            setCategoryDeleted(props.result.filter((post) => !post.rhContentCategoryState));\n        }\n    }, [props.result]);\n\n    useEffect(() => {\n        if (props.resultPostCategory !== null) {\n            toast.dark(t('common.categorie_success'), {\n                position: \"top-right\",\n                autoClose: Constant.toastDelay,\n                hideProgressBar: true,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: false,\n                progress: undefined,\n            });\n            setTimeout(() => {\n                history.go(0);\n            }, Constant.toastDelay);\n            props.createCategoryReset();\n        }\n        if (props.errorPostCategory !== null) {\n            toast.error(Utils.displayErrorRequest(props.errorPostCategory), {\n                position: \"top-right\",\n                autoClose: Constant.toastDelay,\n                hideProgressBar: true,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: false,\n                progress: undefined,\n            });\n            props.createCategoryReset();\n        }\n\n        if (props.resultModifyCategory !== null) {\n            toast.dark(t('common.categorie_modify_success'), {\n                position: \"top-right\",\n                autoClose: Constant.toastDelay,\n                hideProgressBar: true,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: false,\n                progress: undefined,\n            });\n            history.go(0);\n            props.modifyCategoryReset();\n        }\n        if (props.errorModifyCategory !== null) {\n            toast.error(Utils.displayErrorRequest(props.errorModifyCategory), {\n                position: \"top-right\",\n                autoClose: Constant.toastDelay,\n                hideProgressBar: true,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: false,\n                progress: undefined,\n            });\n            props.modifyCategoryReset();\n        }\n    }, [props]);\n\n    useEffect(() => {\n        if (props.result !== null) setIsLoading(false);\n        else setIsLoading(true);\n    }, [categories]);\n\n    const setCategoryPublishedAction = () => {\n        if (props.result !== null) {\n            let tempPosts = props.result.filter((post) => post.rhContentCategoryState);\n            setCategories(tempPosts);\n            setCategoriesPublished(tempPosts);\n        }\n    };\n\n    const setCategoryDeletedAction = () => {\n        if (props.result !== null) {\n            let tempPosts = props.result.filter((post) => !post.rhContentCategoryState);\n            setCategories(tempPosts);\n            setCategoryDeleted(tempPosts);\n            setTabsActiveIndex(1);\n        }\n    };\n\n    const handleSearch = () => {\n        console.log(search);\n        if (props.result !== null)\n            setCategories(props.result.filter((post) => post.rhContentCategoryName.toLowerCase().includes(search.toLowerCase())))\n\n    };\n\n    const onSubmitCategory = () => {\n        if (isModifyCategory) {\n            props.modifyCategoryAction(idCategory, {\n                rhContentCategoryName: category,\n                rhContentCategoryState: true\n            });\n        } else {\n            props.createCategoryAction({\n                rhContentCategoryName: category,\n                rhContentCategoryState: true,\n            });\n        }\n    };\n\n\n    const ExpandedComponent = ({data}) => <pre>{JSON.stringify(data, null, 2)}</pre>;\n\n    const renderPostTable = (data) => (\n        <DataTableComponent\n            columns={columns}\n            data={!isLoading ? data : []}\n            progressPending={props.loading}\n            defaultSortField=\"name\"\n            loading={props.loading || isLoading}\n            selectableRowsComponent={Checkbox}\n            onRowClicked={(category) => {\n                setIsModifyCategory(true);\n                setIdCategory(category.rhContentCategoryId);\n                $('#category').val(category.rhContentCategoryName);\n                $('#btnModal').trigger('click');\n                $('.modal-title').html(t('common.categorie_modify'));\n                $('.modal-footer .btn-primary').html(t('common.modify'));\n            }}\n            expandableRows={false}\n            expandableRowsComponent={<ExpandedComponent/>}\n        />\n    );\n\n    console.log(\"POST\", categories);\n\n    const renderModalAddCategory = () => (\n        <div className=\"modal fade\" id=\"addCategoryModal\" data-backdrop=\"static\" data-keyboard=\"false\" tabIndex=\"-1\"\n             aria-labelledby=\"addCategoryModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"addCategoryModalLabel\">{t('common.new_category')}</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n                            <span className=\"sr-only\">{t('common.click_to_close')}</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n\n                                <form className=\"row\" id=\"PostAdminEditForm\" onSubmit={handleSubmit(onSubmitCategory)}>\n\n                                    <div className=\"col-12 mt-3\">\n\n                                        <Input wrapperClass=\"form-group\"\n                                               inputClass=\"form-control\"\n                                               type=\"text\"\n                                               name=\"category\"\n                                               required\n                                               ref={register({required: true, maxLength: 255})}\n                                               id=\"category\"\n                                               value={category}\n                                               onChange={(e) => setCategory(e.target.value)}\n                                               error={errors.hasOwnProperty(\"category\")}\n                                               errorText={t('error.required_field')}\n                                               labelText={t('common.category_label')}\n                                               maxLength=\"255\"\n                                        />\n\n                                    </div>\n\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-secondary\"\n                                data-dismiss=\"modal\">{t('common.close')}</button>\n                        {\n                            props.loadingPostCategory ?\n                                <button className=\"btn btn-primary\" type=\"button\" disabled>\n                                                    <span className=\"spinner-border spinner-border-sm\" role=\"status\"\n                                                          aria-hidden=\"true\"/>\n                                    <span className=\"sr-only\">{t('common.loading')}</span>\n                                </button> :\n                                <button type=\"button\" className=\"btn btn-primary\"\n                                        onClick={handleSubmit(onSubmitCategory)}>{t('common.post')}</button>\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n    return (\n        <>\n            <div className=\"container-fluid\">\n                <Helmet>\n                    <title>{`${t(\"app.name\")} - ${t('common.categorie')}`}</title>\n                </Helmet>\n                <h1>{t(\"common.categorie\")}</h1>\n\n                {renderModalAddCategory()}\n\n                <div className=\"row\">\n                    <div className=\"col-12 o-layer\">\n                        <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" id=\"btnModal\"\n                                style={{display: \"none\"}} data-target=\"#addCategoryModal\"/>\n                        <div className=\"row mb-3\">\n                            <div className=\"col-auto mr-auto\">\n                                <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\"\n                                        onClick={() => setIsModifyCategory(false)}\n                                        data-target=\"#addCategoryModal\">\n                                    <span className=\"icon icon-Add\" aria-hidden=\"true\"/>\n                                    {t('common.add')}\n                                </button>\n                            </div>\n                            <div className=\"col-auto\">\n                                <div className=\"input-group\">\n                                    <input type=\"text\" className=\"form-control\" placeholder={t('common.find_category')}\n                                           aria-label={t('common.find_category')} aria-describedby=\"button-addon2\"\n                                           value={search} onChange={(e) => {\n                                        setSearch(e.target.value);\n                                        handleSearch();\n                                    }}/>\n                                    <div className=\"input-group-append\">\n                                        <button type=\"button\" className=\"btn btn-secondary btn-icon\">\n                                            <span className=\"sr-only\">Icon</span>\n                                            <span className=\"icon icon-search\" aria-hidden=\"true\"></span>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"mt-4\">\n                            <ul className=\"nav nav-tabs nav-tabs-light\">\n                                <li className=\"nav-item\">\n                                    <a href=\"#\" className={`nav-link ${tabsActiveIndex === 0 && \"active\"}`}\n                                       onClick={() => {\n                                           setCategoryPublishedAction();\n                                           setTabsActiveIndex(0);\n                                       }}>{`${t('common.published')} (${categoriesPublished.length})`}</a>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a href=\"#\" className={`nav-link ${tabsActiveIndex === 1 && \"active\"}`}\n                                       onClick={() => setCategoryDeletedAction()}>{`${t('common.unpublished')} (${categoriesDeleted.length})`}</a>\n                                </li>\n                            </ul>\n                            <div className=\"media-body\">\n                                {renderPostTable(categories)}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nconst mapStateToProps = state => ({\n    loading: state.getAllCategoryReducer.loading,\n    result: state.getAllCategoryReducer.result,\n    error: state.getAllCategoryReducer.error,\n\n    loadingPostCategory: state.createCategoryReducer.loading,\n    resultPostCategory: state.createCategoryReducer.result,\n    errorPostCategory: state.createCategoryReducer.error,\n\n    loadingModifyCategory: state.modifyCategoryReducer.loading,\n    resultModifyCategory: state.modifyCategoryReducer.result,\n    errorModifyCategory: state.modifyCategoryReducer.error,\n\n    loadingGetDomaine: state.getAllDomainesReducer.loading,\n    resultGetDomaine: state.getAllDomainesReducer.result,\n    errorGetDomaine: state.getAllDomainesReducer.error,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    getAllPostsAction,\n    getAllPostsReset,\n\n    createCategoryAction,\n    createCategoryReset,\n\n    modifyCategoryAction,\n    modifyCategoryReset,\n\n    getAllCategoryAction,\n    getAllCategoryReset\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PostCategory));\n","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/screens/Home/index.js",["356","357","358","359","360","361","362","363","364","365"],"import React, { useEffect, useState } from 'react';\nimport './style.css';\nimport { useTranslation } from \"react-i18next\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport Slider from \"../../components/Slider\";\nimport { FakeData } from \"../../fakeData\";\nimport PostWidgetList from \"../../components/PostWidgetList\";\nimport { Helmet } from \"react-helmet\";\nimport TitleUnderlined from \"../../components/TitleUnderlined\";\nimport _ from \"lodash\";\nimport * as Utils from \"../../utils\";\n\nimport {\n    getAllPostsAction,\n    getAllPostsByDomaineAction,\n    getAllPostsByDomaineReset, getAllPostsFeaturedAction, getAllPostsFeaturedReset,\n    getAllPostsReset, getPostFeaturedAction, getPostFeaturedReset\n} from \"../../redux/api/PostsApi\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport ContentLoader from \"react-content-loader\"\nimport { Constant } from \"../../config/Constant\";\nimport { Config } from \"../../config/ServerConfig\";\nimport Interweave from \"interweave\";\nimport { getAllBlogReset, getAllBlogAction } from \"../../redux/api/BlogApi\";\nimport { getAllPostsFrontEndAction } from \"../../redux/api/PostsApi\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowAltCircleDown, faUser, faFemale, faMale, faPlus  } from \"@fortawesome/free-solid-svg-icons\";\nimport ReactPlayer from \"react-player\";\nimport * as moment from \"moment\";\nimport Loader from \"../../components/Loader\";\nimport { Images } from '../../config/Images';\n\nlet route = require('../../utils/route');\n\nconst eLearners = require('../../top_e_learners.json');\n\nfunction Home(props) {\n\n    const { t } = useTranslation();\n    const [postsFeatured, setPostsFeatured] = useState([]);\n    const [blogsWithoutImage, setBlogsWithoutImage] = useState(null);\n    const [blogs, setBlogs] = useState(null);\n    const [hasLoadedPost, setHasLoadedPost] = useState(false);\n    const [hasLoadedBlog, setHasLoadedBlog] = useState(false);\n\n    const LoaderLeft = () => (\n        <ContentLoader\n            speed={2}\n            width=\"auto\"\n            height={300}\n            viewBox=\"0 0 400 300\"\n            backgroundColor=\"#292929\"\n            foregroundColor=\"#8f8f8f\"\n            {...props}\n        >\n            <rect x=\"4\" y=\"4\" rx=\"2\" ry=\"2\" width=\"400\" height=\"14\" />\n            <rect x=\"3\" y=\"133\" rx=\"0\" ry=\"0\" width=\"400\" height=\"8\" />\n            <rect x=\"3\" y=\"147\" rx=\"0\" ry=\"0\" width=\"400\" height=\"8\" />\n            <rect x=\"3\" y=\"162\" rx=\"0\" ry=\"0\" width=\"204\" height=\"8\" />\n            <rect x=\"2\" y=\"240\" rx=\"2\" ry=\"2\" width=\"132\" height=\"30\" />\n            <rect x=\"4\" y=\"27\" rx=\"2\" ry=\"2\" width=\"300\" height=\"14\" />\n\n        </ContentLoader>\n    );\n\n    const LoaderRight = () => (\n        <ContentLoader\n            speed={2}\n            width=\"auto\"\n            height={300}\n            viewBox=\"0 0 400 300\"\n            backgroundColor=\"#292929\"\n            foregroundColor=\"#8f8f8f\"\n            {...props}\n        >\n            <rect x=\"0\" y=\"0\" rx=\"2\" ry=\"2\" width=\"400\" height=\"270\" />\n        </ContentLoader>\n    );\n\n    const LoaderSlider = () => (\n        <div className=\"col-12 col-lg-9\">\n            <div className=\"row\">\n                <div className=\"col-6\">\n                    <LoaderLeft />\n                </div>\n                <div className=\"col-6\">\n                    <LoaderRight />\n                </div>\n            </div>\n        </div>\n    );\n\n    const ShortcutLink = (props) => (\n        <div className={`${props.className}`} style={props.style}>\n            <div className={`${props.childClass == null ? \"bg-gray1\" : props.childClass } rounded-xl item p-2  w-100 d-flex-column align-items-baseline`}>\n                <NavLink to={{\n                    pathname: props.link\n                }}\n                    className=\"align-items-baseline d-block flex-grow-1\"\n                    exact>\n                    <div className=\"d-flex mb-1 align-items-baseline\">\n                        <span className=\"text-white flex-grow-1 fs-14 text-nowrap font-weight-bold\">\n                            {props.subTitle}\n                        </span>\n                        <FontAwesomeIcon icon={props.icon} />\n                    </div>\n                    <div className=\"d-flex mb-1 align-items-baseline\">\n                        <div className=\"d-flex flex-grow-1\">\n                            <h3 className=\"text-white lead font-weight-bold py-0 my-0\">\n                                {props.title}\n                            </h3>\n                        </div>\n                        <div className=\"text-white fs-26\">\n                            {props.count}\n                        </div>\n                    </div>\n                    { props.children }\n                </NavLink>\n            </div>\n        </div>\n    );\n\n    // const eLearners = .split(\",\");\n\n\n    const loadData = () => {\n        if (props.resultGetAllPostsFeatured !== null) {\n            setPostsFeatured(props.resultGetAllPostsFeatured);\n        }\n        if (props.result !== null && !hasLoadedPost) {\n            let tempPost = props.result.filter((post) => post.rhContentPriorityLevel === 1 && Utils.isImageFileUrl(post.rhContentPrincipalLink));\n            tempPost.map(post => post.postType = \"post\");\n            setPostsFeatured(_.slice(tempPost, 0, 3));\n            setHasLoadedPost(true);\n            props.getAllPostsFrontEndAction();\n            props.getAllBlogAction();\n        }\n        if (props.resultBlog !== null && !hasLoadedBlog) {\n            let postsLoaded = postsFeatured;\n            let currentPosts = props.resultBlog.filter((post) => post.rhContentPriorityLevel === 1 && Utils.isImageFileUrl(post.rhContentPrincipalLink));\n            currentPosts.map(post => post.postType = \"blog\");\n            console.log(\"mon blog\", props.resultBlog);\n            setPostsFeatured(_.slice(_.concat(postsLoaded, currentPosts), 0, 6));\n            //console\n            // let data= props.result.filter((value)=>value.rhContentPrincipalLink!==null);\n            let tempBlogWithoutImage = props.resultBlog.filter((blog) => Utils.isImageFileUrl(blog.rhContentPrincipalLink))[0];\n\n\n            console.log(\"Blog without video\", tempBlogWithoutImage);\n\n            if (typeof myVar !== 'undefined') {\n                console.log(\"dataFinal\", props.resultBlog);\n                console.log(\"data2\", tempBlogWithoutImage);\n                console.log(\"Blogs with image\", props.resultBlog.filter((blog) => blog.rhContentId !== tempBlogWithoutImage.rhContentId));\n                setBlogsWithoutImage(tempBlogWithoutImage);\n                setBlogs(props.resultBlog.filter((blog) => blog.rhContentId !== tempBlogWithoutImage.rhContentId));\n                setHasLoadedBlog(true);\n            }\n        }\n    }\n\n    useEffect(() => {\n        loadData();\n        // console.log(\"eLearners\", eLearners);\n    }, [props]);\n    \n    useEffect(() => {\n        if (props.result === null && props.resultBlog === null)\n            props.getAllPostsFrontEndAction();\n\n        if (props.resultGetAllPostsFeatured === null)\n            props.getAllPostsFeaturedAction();\n\n        if (props.resultBlog === null)\n            props.getAllBlogAction();\n\n    });\n\n    const checkAppLink = (e) => ( e !== \"\" ? e : \"/under-construction\" );\n\n    /*        useEffect(() => {\n                loadData();\n            }, [props, props.location.pathname]);*/\n\n\n    return (\n        <>\n            <Helmet>\n                <title>{`${t(\"app.name\")} - ${t('home.title')}`}</title>\n            </Helmet>\n            <section className=\"home bg-white \">\n                {/* BEGIN SLIDER*/}\n                <div className=\"container-fluid\">\n                    <div className=\"row home-slider-container pt-5 pb-5\">\n                        <div className=\"col-12 col-lg-3 \">\n                                <div className=\"row pl-2 rounded-xl flex-column justify-content-center pb-2 pt-2\">\n                                    <h4 className=\"text-dark\">{t(\"common.application_Rh\")}</h4>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\" style={{ paddingRight: 0 }}>\n                                            {/* taleo*/}\n                                            <a target=\"_blank\"  rel=\"noreferrer\" href={Constant.applicationRh.taleo.url} className=\"skiptranslate btn letter-spacing-1 hrApp\">\n                                                <h5 className=\"font-weight-bold mb-0\"> \n                                                    {/* <img src={Images.Taleo} className=\"mr-1\" alt=\"\" width=\"auto\" height=\"50px\" /> */}\n                                                    {Constant.applicationRh.taleo.title}\n                                                </h5>\n                                            </a>\n                                        </div>\n                                        <div className=\"col-12\" style={{ paddingRight: 0 }}>\n                                            {/* my infos*/}\n                                            <a target=\"_blank\" rel=\"noreferrer\" href={Constant.applicationRh.myInfos.url} className=\"skiptranslate btn letter-spacing-1 hrApp\">\n                                                <h5 className=\"font-weight-bold mb-0\">\n                                                    {/* <img src={Images.myInfo} className=\"mr-1\" alt=\"\" width=\"auto\" height=\"65px\" /> */}\n                                                    {Constant.applicationRh.myInfos.title}\n                                                </h5>\n                                            </a>\n                                        </div>\n                                        <div className=\"col-12\" style={{ paddingRight: 0 }}>\n                                            {/* e_learning */}\n                                            <a target=\"_blank\" rel=\"noreferrer\" href={ checkAppLink(Constant.applicationRh.e_learning.url) } className=\"skiptranslate btn letter-spacing-1 hrApp\">\n                                                <h5 className=\"font-weight-bold mb-0\"> \n                                                    {/*<img src={Images.eLearning} className=\"mr-1\" alt=\"\" width=\"auto\" height=\"30px\" />*/}\n                                                    {Constant.applicationRh.e_learning.title}\n                                                </h5>\n                                            </a>\n                                        </div>\n                                        <div className=\"col-12\" style={{ paddingRight: 0 }}>\n                                            {/* livret d'accueil */}\n                                            <a target=\"_blank\" rel=\"noreferrer\" href={ checkAppLink(Constant.applicationRh.livretAcueil.url) } className=\"skiptranslate btn letter-spacing-1 hrApp\">\n                                                <h5 className=\"font-weight-bold mb-0\">{Constant.applicationRh.livretAcueil.title}</h5>\n                                            </a>\n                                        </div>\n                                        <div className=\"col-12\" style={{ paddingRight: 0 }}>\n                                            {/* Fusion */}\n                                            <a target=\"_blank\" rel=\"noreferrer\" href={ checkAppLink(Constant.applicationRh.fusion.url) } className=\"skiptranslate btn letter-spacing-1 hrApp\">\n                                                <h5 className=\"font-weight-bold\">{Constant.applicationRh.fusion.title}</h5>\n                                            </a>\n                                        </div>\n                                    </div>\n                                </div>\n                        </div>\n                        <div className=\"col-lg-6 col-sm-12 col-md-12 py-2\">\n                            <div className=\"\">\n                                <h4 className=\"text-capitalize pb-3\n                                \">{t('common.latest_posts')}</h4>\n                                <div className=\"row\">\n                                    <div className=\"col-lg-12 col-sm-12 col-md-12 col-xs-12\">\n                                        {\n                                            props.loading ?\n                                                <Loader />\n                                                :\n                                                props.result !== null &&\n                                                <Slider\n                                                    navigation={false}\n                                                    autoplay={{ delay: 5500, loop: true }}\n                                                    pagination={true}\n                                                    className={\"home-slider\"}\n                                                    slides={props.result}\n                                                    renderItem={(post) => (\n                                                        <div className=\"col\">\n                                                            <div\n                                                                className=\"row no-gutters shadow-sm rounded overflow-hidden flex-md-row mb-4 h-md-250 position-relative bg-white\">\n                                                                {/*                                            <div className=\"col-6 p-4 d-flex flex-column position-static\">\n                                                        <strong\n                                                            className=\"d-inline-block mb-2 text-primary\">{post.rhContentCategory}</strong>\n                                                        <h3 className=\"mb-0\">{post.rhContentTitle}</h3>\n                                                        <div\n                                                            className=\"mb-1 h6 text-muted\">{moment(post.rhContentDateCeated).format(\"lll\")}</div>\n                                                        <Interweave\n                                                            content={Utils.removeTag(Utils.cutString(post.rhContentDescription, 200))}/>\n\n                                                        <NavLink\n                                                            to={{\n                                                                pathname: `${route.post.root}/${post.rhContentDomaineId}/${post.rhContentId}`,\n                                                                post\n                                                            }}\n                                                            className=\"stretched-link btn btn-primary\">\n                                                            {t('common.read_more')}\n                                                        </NavLink>\n                                                    </div>\n                                                    <div className=\"col-auto d-none d-lg-block\">\n                                                        <img src=\"https://picsum.photos/800/450\" alt={post.rhContentTitle}\n                                                            className=\"img-fluid bd-placeholder-img\"/>\n                                                    </div>*/}\n                                                                <div className=\"d-flex flex-row\"></div>\n                                                                <div className=\"row news-card bg-white\">\n                                                                    <div className=\"col-md-6 px-0\">\n                                                                        {\n                                                                            !_.isNil(post.rhContentPrincipalLink) ?\n                                                                                Utils.isImageFileUrl(post.rhContentPrincipalLink) ?\n                                                                                    <div className=\"feed-image\" >\n                                                                                        <img\n                                                                                            alt=\"\"\n                                                                                            className=\"\"\n                                                                                            loading=\"lazy\"\n                                                                                            style={{ objectFit: \"cover\", width: \"100%\", height: \"250px\"}}\n                                                                                            src={Config.imageFolder + post.rhContentPrincipalLink} />\n                                                                                    </div>\n                                                                                    :\n                                                                                    <ReactPlayer\n                                                                                        className=\"img-fluid img-reponsive video-preview\"\n                                                                                        width=\"400px\"\n                                                                                        height=\"200px\"\n                                                                                        url={Config.imageFolder + post.rhContentPrincipalLink}\n                                                                                    />\n                                                                                : <img className=\"\"\n                                                                                    loading=\"lazy\"\n                                                                                    alt=\"\"\n                                                                                    style={{ objectFit: \"cover\", width: \"100%\", height: \"250px\"}}\n                                                                                    src=\"https://picsum.photos/800/650\" />\n                                                                        }\n\n                                                                    </div>\n                                                                    <div className=\"col-md-6 align-self-center p-3 pr-3\">\n                                                                        <div className=\"news-feed-text\">\n                                                                            <h4 className=\"\">{post.rhContentTitle}</h4>\n                                                                            <span className=\"date\">\n                                                                                <div className=\"mb-1 font-weight-medium text-dark text-capitalize h6\">\n                                                                                    {moment(post.rhContentDatePublish).format(\"ll\")}\n                                                                                </div>\n                                                                            </span>\n                                                                            <span>\n                                                                                <Interweave\n                                                                                    content={Utils.removeTag(Utils.cutString(post.rhContentDescription, 200))} />\n                                                                            </span>\n                                                                            <div\n                                                                                className=\"d-flex flex-row justify-content-between align-items-center mt-2\">\n                                                                                <NavLink\n                                                                                    to={{\n                                                                                        pathname: `${route.post.root}/${post.rhContentDomaine.rhContentCategoryId}/${post.rhContentDomaineId}/${post.rhContentId}`,\n                                                                                        post\n                                                                                    }}\n                                                                                    className=\"btn btn-secondary\">\n                                                                                    {t('common.read_more')}\n                                                                                </NavLink>\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n\n                                                    )\n                                                    } />\n\n                                        }\n\n                                    </div>\n\n                                    {/* <div className=\"col-lg-3 col-sm-3 col-md-3 col-xs-12\">\n                                        <PostWidgetList theme=\"black\" posts={props.resultBlog} />\n                                    </div> */}\n                                </div>\n                            </div>\n                        </div>\n            \n                        {/* {\n                            (props.loadingGetAllPostsFeatured) ?\n                                <LoaderSlider /> :\n                                (props.resultGetAllPostsFeatured !== null) ?\n                                    <div className=\"col-12 col-lg-6\">\n\n                                        {/* <Slider pagination\n                                            className={\"home-slider\"}\n                                            slides={props.resultGetAllPostsFeatured}\n                                            renderItem={(item) => (\n                                                <div className=\"row\">\n                                                    <div className=\"col-7\" style={{ paddingRight: 0 }}>\n                                                        <h3 className=\"display-4\">{Utils.cutString(item.rhContentTitle, 100)}</h3>\n                                                        <p className=\"lead text-primary\">\n                                                            <Interweave\n                                                                content={Utils.removeTag(Utils.cutString(item.rhContentDescription, 100))} />\n                                                        </p>\n                                                        <NavLink\n                                                            to={{\n                                                                pathname: item.rhContentPostType === Constant.publicationID ?\n                                                                    `${route.post.root}/${item.rhContentDomaine.rhContentCategoryId}/${item.rhContentDomaineId}/${item.rhContentId}` :\n                                                                    `${route.blog.root}/${item.rhContentDomaine.rhContentCategoryId}/${item.rhContentDomaineId}/${item.rhContentId}`,\n                                                                item\n                                                            }}\n                                                            className=\"btn btn-primary\">\n                                                            {t('common.read_more')}\n                                                        </NavLink>\n                                                    </div>\n                                                    <div className=\"col-5\" style={{ paddingLeft: 0 }}>\n                                                        <div class=\"row\">\n                                                            <div class=\"col-10\">\n                                                                <img\n                                                                    src={Config.imageFolder + item.rhContentPrincipalLink}\n                                                                    alt=\"\" className=\"img-fluid\"\n                                                                    loading=\"lazy\" />\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            )\n                                            } /> */}\n                                            {/* <ReactPlayer\n                                                className=\"img-fluid img-reponsive video-preview mb-3\"\n                                                width=\"400px\"\n                                                autoplay=\"true\"\n                                                height=\"200px\"\n                                                url={Config.imageFolder + \"bf8315e4-4b3c-4faa-b8c7-2599bd768dad.mp4\"}\n                                            />    */}\n                                            {/* <div className={\"home-slider\"}>\n                                                {props.resultGetAllPostsFeatured.map((item, index) => ( \n                                                <div className=\"row pb-5\">\n                                                    <div className=\"col-7\" style={{ paddingRight: 0 }}>\n                                                        <h3 className=\"display-4\">{Utils.cutString(item.rhContentTitle, 100)}</h3>\n                                                        <p className=\"lead text-primary\">\n                                                            <Interweave\n                                                                content={Utils.removeTag(Utils.cutString(item.rhContentDescription, 100))} />\n                                                        </p>\n                                                        <NavLink\n                                                            to={{\n                                                                pathname: item.rhContentPostType === Constant.publicationID ?\n                                                                    `${route.post.root}/${item.rhContentDomaine.rhContentCategoryId}/${item.rhContentDomaineId}/${item.rhContentId}` :\n                                                                    `${route.blog.root}/${item.rhContentDomaine.rhContentCategoryId}/${item.rhContentDomaineId}/${item.rhContentId}`,\n                                                                item\n                                                            }}\n                                                            className=\"btn btn-primary\">\n                                                            {t('common.read_more')}\n                                                        </NavLink>\n                                                    </div>\n                                                    <div className=\"col-5\" style={{ paddingLeft: 0 }}>\n                                                        <div class=\"row\">\n                                                            <div class=\"col-10\">\n                                                                <img\n                                                                    src={Config.imageFolder + item.rhContentPrincipalLink}\n                                                                    alt=\"\" className=\"img-fluid\"\n                                                                    loading=\"lazy\" />\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            )\n                                        )}\n                                        </div>                              \n                                    </div> : <LoaderSlider /> */}\n                        {/* } */}\n                        <div className=\"col-12 col-lg-3\">\n                            <div className=\"row justify-content-center\">\n                                <div className=\"col-12\" style={{ paddingRight: \".1em\"}}>\n                                <div className=\"item p-2 bg-primary w-100 rounded-xl d-flex-column align-items-baseline\">\n                                    <NavLink to={{\n                                        pathname: props.link\n                                    }}\n                                        className=\"align-items-baseline d-block flex-grow-1\"\n                                        exact>\n                                        <div className=\"d-flex mb-1 align-items-baseline\">\n                                            <span className=\"text-white flex-grow-1 fs-14 text-nowrap font-weight-bold\">\n                                                {t('common.nombre_homme')}\n                                            </span>                                      \n                                        </div>\n                                        <div className=\"d-flex mb-1 align-items-baseline\">\n                                            <div className=\"d-flex flex-grow-1\">\n                                                <div className={\"fa-2x pr-2 text-white\"}>\n                                                    <FontAwesomeIcon icon={faMale} />\n                                                </div>  \n                                                <h3 className=\"text-white lead font-weight-bold py-0 my-0\">\n                                                    463\n                                                </h3>\n                                            </div>\n                                        </div>\n                                    </NavLink>\n                                    <NavLink to={{\n                                        pathname: props.link\n                                    }}\n                                        className=\"align-items-baseline d-block flex-grow-1\"\n                                        exact>\n                                        <div className=\"d-flex mb-1 align-items-baseline\">\n                                            <span className=\"text-white flex-grow-1 fs-14 text-nowrap font-weight-bold\">\n                                                {t('common.nombre_femme')}\n                                            </span>\n                                        </div>\n                                        <div className=\"d-flex mb-1 align-items-baseline\">\n                                            <div className=\"d-flex flex-grow-1\">\n                                                <div className={\"fa-2x pr-2 color-primary text-white\"}>\n                                                    <FontAwesomeIcon icon={faFemale} />\n                                                </div>\n                                                <h3 className=\"text-white lead font-weight-bold py-0 my-0\">\n                                                    435\n                                                </h3>\n                                            </div>\n                                        </div>\n                                    </NavLink>\n                                    <NavLink to={{\n                                        pathname: props.link\n                                    }}\n                                        className=\"align-items-baseline d-block flex-grow-1\"\n                                        exact>\n                                        <div className=\"d-flex mb-1 align-items-baseline\">\n                                            <span className=\"text-white flex-grow-1 fs-14 text-nowrap font-weight-bold\">\n                                                {\"Force de travail\"}\n                                            </span>\n                                        </div>\n                                        <div className=\"d-flex mb-1 align-items-baseline\">\n                                            <div className=\"d-flex flex-grow-1\">\n                                                <div className={\"fa-2x color-primary text-white pr-2\"}>\n                                                    <FontAwesomeIcon icon={faFemale} />   \n                                                    +\n                                                    <FontAwesomeIcon icon={faMale} />\n                                                </div>\n                                                <h3 className=\"text-white lead font-weight-bold py-0 my-0\">\n                                                    898\n                                                </h3>\n                                            </div>\n                                        </div>\n                                    </NavLink>\n                                </div>\n\n                                </div>\n                                {/* <PostWidgetList theme=\"white\"\n                                    posts={props.resultBlog !== null ? _.slice(props.resultBlog, 0, 3) : null} /> */}\n                            </div>\n                            <br></br>\n\n                            <div className=\"row justify-content-center\">\n                                <ShortcutLink children={\n                                    // <h5>\n                                        // Fotsing Bernard,Tanga Benjamin,Egbenchong Laura,Ewambil Edanmoua Claude Gaelle,Tchoupou Alain,Bonga Christelle,Ndjaka Deborah,Ngono Romeo,Melingui Herve, Mmira Abdoulahi, Mvondo Belinda.\n                                    // </h5>\n                                    <Slider \n                                        className={\"mb-0\"}\n                                        autoplay={{ delay: 5000, loop: true }}\n                                        slides={eLearners}\n                                        navigation\n                                        pagination\n                                        renderItem={ item => (\n                                            <h4 className=\"py-1 text-center text-white\">{item}</h4>\n                                        )}\n                                    />\n                                }\n                                    subTitle={t('common.top_elearning')}\n                                    count=''\n                                    childClass=\"bg-green1\"\n                                    icon={faUser}\n                                    className=\"col-12\"\n                                    style={{ paddingRight: \".1em\" }} />\n\n                                {/* <PostWidgetList theme=\"white\"\n                                    posts={props.resultBlog !== null ? _.slice(props.resultBlog, 0, 3) : null} /> */}\n                            </div>\n                            <br></br>\n\n                            <div className=\"row justify-content-center\">\n\n                                <ShortcutLink title={2}\n                                    subTitle={t('common.date_importante')}\n                                    count=''\n                                    icon={faUser}\n                                    className=\"col-12\"\n                                    childClass=\"bg-primary\"\n                                    style={{ paddingRight: \".1em\" }} />\n\n                                {/* <PostWidgetList theme=\"white\"\n                                    posts={props.resultBlog !== null ? _.slice(props.resultBlog, 0, 3) : null} /> */}\n                                \n                            </div>\n                        </div>\n                        {/*<div className=\"col-3 pl-0 pr-4\">\n                                <h3 className=\"display-3\">Actualité</h3>\n                                <hr/>\n                                <div className=\"list-group\">\n                                    <a href=\"#\" className=\"list-group-item list-group-item-action active\">\n                                        <div className=\"d-flex w-100 justify-content-between\">\n                                            <h5 className=\"mb-1\">List group item heading</h5>\n                                            <small>3 days ago</small>\n                                        </div>\n                                        <p className=\"mb-1\">Donec id elit non mi porta gravida at eget metus. Maecenas sed\n                                            diam eget risus varius blandit.</p>\n                                        <small>Donec id elit non mi porta.</small>\n                                    </a>\n                                    <a href=\"#\" className=\"list-group-item list-group-item-action active\">\n                                        <div className=\"d-flex w-100 justify-content-between\">\n                                            <h5 className=\"mb-1\">List group item heading</h5>\n                                            <small className=\"text-muted\">3 days ago</small>\n                                        </div>\n                                        <p className=\"mb-1\">Donec id elit non mi porta gravida at eget metus. Maecenas sed\n                                            diam eget risus varius blandit.</p>\n                                        <small className=\"text-muted\">Donec id elit non mi porta.</small>\n                                    </a>\n                                    <a href=\"#\" className=\"list-group-item list-group-item-action active\">\n                                        <div className=\"d-flex w-100 justify-content-between\">\n                                            <h5 className=\"mb-1\">List group item heading</h5>\n                                            <small className=\"text-muted\">3 days ago</small>\n                                        </div>\n                                        <p className=\"mb-1\">Donec id elit non mi porta gravida at eget metus. Maecenas sed\n                                            diam eget risus varius blandit.</p>\n                                        <small className=\"text-muted\">Donec id elit non mi porta.</small>\n                                    </a>\n                                </div>\n                            </div>*/}\n                    </div>\n                </div>\n                {\n                    /*<div className=\"col-lg-12 col-sm-12 col-md-12 py-5\">\n                    <div className=\"container\">\n\n                        <TitleUnderlined customClass=\"mb-4\">{t('home.a_la_une')}</TitleUnderlined>\n                        <div className=\"row\">\n                            <div className=\"col-md-4\">\n                                <div className=\"card mb-4 shadow-sm\">\n                                    <img alt=\"alt\" className=\"img-fluid\"\n                                         src=\"https://brand.orange.com/media/14420/gettyimages-564378601_preview.jpg\"/>\n\n                                    <div className=\"card-body\">\n                                        <p className=\"card-text\">This is a wider card with supporting text below as a\n                                            natural lead-in to additional content. This content is a little bit\n                                            longer.</p>\n                                        <div className=\"d-flex justify-content-between align-items-center\">\n                                            <div className=\"btn-group\">\n                                                                                            <NavLink to={route.post.post_detail} className=\"stretched-link\">\n                                                {t('common.read_more')}\n                                            </NavLink>\n                                            </div>\n                                            <small className=\"text-muted\">9 mins</small>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <div className=\"card mb-4 shadow-sm\">\n                                    <img alt=\"alt\" className=\"img-fluid\"\n                                         src=\"https://brand.orange.com/media/14420/gettyimages-564378601_preview.jpg\"/>\n\n                                    <div className=\"card-body\">\n                                        <p className=\"card-text\">This is a wider card with supporting text below as a\n                                            natural lead-in to additional content. This content is a little bit\n                                            longer.</p>\n                                        <div className=\"d-flex justify-content-between align-items-center\">\n                                            <div className=\"btn-group\">\n                                                <NavLink to={route.post.post_detail} className=\"stretched-link\">\n                                                {t('common.read_more')}\n                                            </NavLink>\n                                            </div>\n                                            <small className=\"text-muted\">9 mins</small>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <div className=\"card mb-4 shadow-sm\">\n                                    <img alt=\"alt\" className=\"img-fluid\"\n                                         src=\"https://brand.orange.com/media/14420/gettyimages-564378601_preview.jpg\"/>\n\n                                    <div className=\"card-body\">\n                                        <p className=\"card-text\">This is a wider card with supporting text below as a\n                                            natural lead-in to additional content. This content is a little bit\n                                            longer.</p>\n                                        <div className=\"d-flex justify-content-between align-items-center\">\n                                            <div className=\"btn-group\">\n                                                                                            <NavLink to={route.post.post_detail} className=\"stretched-link\">\n                                                {t('common.read_more')}\n                                            </NavLink>\n                                            </div>\n                                            <small className=\"text-muted\">9 mins</small>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n\n                        <TitleUnderlined customClass=\"mb-4\">{t('home.offre_emploi')}</TitleUnderlined>\n\n                        <div className=\"row\">\n                            <div className=\"col-md-4\">\n                                <div className=\"card mb-4 shadow-sm\">\n                                    <img alt=\"alt\" className=\"img-fluid\"\n                                         src=\"https://brand.orange.com/media/14420/gettyimages-564378601_preview.jpg\"/>\n\n                                    <div className=\"card-body\">\n                                        <p className=\"card-text\">This is a wider card with supporting text below as a\n                                            natural lead-in to additional content. This content is a little bit\n                                            longer.</p>\n                                        <div className=\"d-flex justify-content-between align-items-center\">\n                                            <div className=\"btn-group\">\n                                                                                            <NavLink to={route.post.post_detail} className=\"stretched-link\">\n                                                {t('common.read_more')}\n                                            </NavLink>\n                                            </div>\n                                            <small className=\"text-muted\">9 mins</small>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <div className=\"card mb-4 shadow-sm\">\n                                    <img alt=\"alt\" className=\"img-fluid\"\n                                         src=\"https://brand.orange.com/media/14420/gettyimages-564378601_preview.jpg\"/>\n                                    <div className=\"card-body\">\n                                        <p className=\"card-text\">This is a wider card with supporting text below as a\n                                            natural lead-in to additional content. This content is a little bit\n                                            longer.</p>\n                                        <div className=\"d-flex justify-content-between align-items-center\">\n                                            <div className=\"btn-group\">\n                                                                                            <NavLink to={route.post.post_detail} className=\"stretched-link\">\n                                                {t('common.read_more')}\n                                            </NavLink>\n                                            </div>\n                                            <small className=\"text-muted\">9 mins</small>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <div className=\"card mb-4 shadow-sm\">\n                                    <img alt=\"alt\" className=\"img-fluid\"\n                                         src=\"https://brand.orange.com/media/14420/gettyimages-564378601_preview.jpg\"/>\n                                    <div className=\"card-body\">\n                                        <p className=\"card-text\">This is a wider card with supporting text below as a\n                                            natural lead-in to additional content. This content is a little bit\n                                            longer.</p>\n                                        <div className=\"d-flex justify-content-between align-items-center\">\n                                            <div className=\"btn-group\">\n                                                                                            <NavLink to={route.post.post_detail} className=\"stretched-link\">\n                                                {t('common.read_more')}\n                                            </NavLink>\n                                            </div>\n                                            <small className=\"text-muted\">9 mins</small>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n*/\n                }\n\n                {/*            <div className=\"discovery-module-one-pop-out bg-yellow py-5 py-lg-3\">\n                <div className=\"container\">\n                    <div className=\"row align-items-center\">\n                        <div className=\"col-12 col-md-6 col-lg-4\">\n                            <h2 className=\"display-1\">Discovery module</h2>\n                            <p className=\"lead\">\n                                Insert your body text in here. Ommoditatur sendand amusanti nobisci psandae dolupta\n                                tatur, con corrum sam fugitatiunt aliae\n                                pa doluptatur sit aut alite excerei ctasimin.\n                            </p>\n                            <a href=\"#\" className=\"btn btn-secondary\">\n                                Find out more<span className=\"sr-only\">&nbsp;about the TITLE OF THE INSIGHT</span>\n                            </a>\n                        </div>\n                        <div className=\"col-12 col-md-6 col-lg-8\">\n                            <img src=\"https://boosted.orange.com/docs/4.5/examples/orange-homepage/images/discovery.svg\"\n                                 alt=\"\" className=\"img-fluid\" width=\"860\" height=\"558\"\n                                 loading=\"lazy\"/>\n                        </div>\n                    </div>\n                </div>\n            </div>*/\n                }\n                {/* END SLIDER*/\n                }\n            </section>\n\n\n            <section className=\"home bg-gray\">\n                <div className=\"col-lg-12 col-sm-12 col-md-12 py-0\">\n                    <div className=\"container\">\n                        \n                        <div className=\"row display-flex\">\n\n                            {\n                                props.loadingBlog && blogsWithoutImage === null ?\n                                    <Loader /> :\n                                    blogsWithoutImage !== null && blogsWithoutImage !== undefined &&\n                                    <>\n                                        <div\n                                            className=\"col-xl-12 col-lg-12 col-md-12 hidden-sm hidden-xs block-card block-card-black block-card-full text-align-center post-full-home\">\n                                            <NavLink to={{\n                                                pathname: `${route.blog.root}/${blogsWithoutImage.rhContentDomaineId}/${blogsWithoutImage.rhContentId}`,\n                                            }} exact>\n                                                <div className=\"row\">\n                                                    <div className=\"col-sm-8 p-0\"\n                                                        style={{ backgroundImage: `url(${Config.imageFolder + blogsWithoutImage.rhContentPrincipalLink})` }}>\n                                                    </div>\n                                                    <div className=\"col-sm-4 bg-dark p-4\">\n                                                        <h2>\n                                                            {blogsWithoutImage.rhContentTitle}\n                                                        </h2>\n                                                        <p>\n                                                            <span style={{ color: \"#ffffff\" }}>\n                                                                <Interweave\n                                                                    content={Utils.removeTag(Utils.cutString(blogsWithoutImage.rhContentDescription, 200))} />\n                                                            </span>\n                                                        </p>\n                                                    </div>\n                                                </div>\n                                            </NavLink>\n                                        </div>\n\n                                        <div className=\"row mt-4 card-custom-home\">\n\n                                            {\n                                                blogsWithoutImage !== null &&\n                                                _.slice(blogs, 0, 3).map((blog, index) => (\n                                                    <div className=\"col-md-4\">\n                                                        <div className=\"card mb-4 shadow-sm\">\n                                                            {\n                                                                !_.isNil(blog.rhContentPrincipalLink) ?\n                                                                    Utils.isImageFileUrl(blog.rhContentPrincipalLink) ?\n                                                                        <img className=\"img-fluid img-responsive\"\n                                                                            loading=\"lazy\"\n                                                                            src={Config.imageFolder + blog.rhContentPrincipalLink} />\n                                                                        :\n                                                                        <ReactPlayer\n                                                                            className=\"img-fluid img-reponsive video-preview\"\n                                                                            width=\"400px\"\n                                                                            height=\"200px\"\n                                                                            url={Config.imageFolder + blog.rhContentPrincipalLink}\n                                                                        />\n                                                                    : <img className=\"img-fluid img-reponsive\"\n                                                                        loading=\"lazy\"\n                                                                        src=\"https://picsum.photos/800/650\" />\n                                                            }\n                                                            <div className=\"card-body\">\n                                                                <h4 className=\"card-title\">{blog.rhContentTitle}</h4>\n                                                                <p className=\"card-text\" style={{ fontWeight: 'normal' }}>\n                                                                    <Interweave\n                                                                        content={Utils.removeTag(Utils.cutString(blog.rhContentDescription, 200))} />\n                                                                </p>\n                                                                <div\n                                                                    className=\"d-flex justify-content-between align-items-center\">\n                                                                    <div className=\"btn-group\">\n                                                                        <NavLink to={{\n                                                                            pathname: `${route.blog.root}/${blog.rhContentDomaineId}/${blog.rhContentId}`,\n                                                                        }}\n                                                                            className=\"btn btn-primary btn-sm\">\n                                                                            {t('common.read_more')}\n                                                                        </NavLink>\n                                                                    </div>\n                                                                    <small className=\"text-muted\">\n                                                                        {moment(blog.rhContentDateCeated).format(\"lll\")}\n                                                                    </small>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n\n                                                ))\n                                            }\n                                        </div>\n                                    </>\n                            }\n\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <section className=\"home bg-dark\">\n            <Slider\n                className={\"home-slider py-3\"}\n                loop={true}\n                autoplay={{ delay: 5000, loop: true }}\n                slides={[(\n                    <div className=\"row justify-content-center align-items-center\" style={{ minHeight: \"90px\" }}>\n                        <h3 className=\"text-center m-auto\">\n                            <span style={{ color: \"#ffffff\" }}>L’innovation est essentielle à notre entreprise. </span>\n                            <br />\n                            <span style={{ color: \"#ff7900\" }}>Construisons-la ensemble</span>\n                        </h3>\n                    </div>\n                ), (\n                    <div className=\"row justify-content-center align-items-center\" style={{ minHeight: \"90px\" }}>\n                        <h3 className=\"text-center m-auto\">\n                            <span style={{ color: \"#ffffff\" }}>HR, </span>\n                            <span style={{ color: \"#ff7900\" }}>Leading the change</span>\n                        </h3>\n                    </div>\n                )]}\n                renderItem={(item) => ( item )} />\n                <div className=\"container-fluid\">\n                    \n                </div>\n            </section>\n\n            {/* <section className=\"home\">\n                <div className=\"col-lg-12 col-sm-12 col-md-12 py-5\">\n                    <div className=\"container\">\n                        <h3 className=\"text-capitalize pb-3\n                        \">{t('common.latest_posts')}</h3>\n                        <div className=\"row justify-content-center align-items-center\">\n                            <div className=\"col-lg-12 col-sm-12 col-md-12 col-xs-12\">\n                                {\n                                    props.loading ?\n                                        <Loader />\n                                        :\n                                        props.result !== null &&\n                                        <Slider\n                                            navigation={false}\n                                            pagination={true}\n                                            className={\"home-slider\"}\n                                            slides={props.result}\n                                            renderItem={(post) => (\n                                                <div className=\"col px-2 mx-3\">\n                                                    <div\n                                                        className=\"row no-gutters shadow-sm rounded overflow-hidden flex-md-row mb-4 h-md-250 position-relative bg-white\">\n                                                        {/*                                            <div className=\"col-6 p-4 d-flex flex-column position-static\">\n                                                <strong\n                                                    className=\"d-inline-block mb-2 text-primary\">{post.rhContentCategory}</strong>\n                                                <h3 className=\"mb-0\">{post.rhContentTitle}</h3>\n                                                <div\n                                                    className=\"mb-1 h6 text-muted\">{moment(post.rhContentDateCeated).format(\"lll\")}</div>\n                                                <Interweave\n                                                    content={Utils.removeTag(Utils.cutString(post.rhContentDescription, 200))}/>\n\n                                                <NavLink\n                                                    to={{\n                                                        pathname: `${route.post.root}/${post.rhContentDomaineId}/${post.rhContentId}`,\n                                                        post\n                                                    }}\n                                                    className=\"stretched-link btn btn-primary\">\n                                                    {t('common.read_more')}\n                                                </NavLink>\n                                            </div>\n                                            <div className=\"col-auto d-none d-lg-block\">\n                                                <img src=\"https://picsum.photos/800/450\" alt={post.rhContentTitle}\n                                                     className=\"img-fluid bd-placeholder-img\"/>\n                                            </div>*/}\n                                                        {/* <div className=\"d-flex flex-row\"></div>\n                                                        <div className=\"row news-card bg-white\">\n                                                            <div className=\"col-md-5\">\n                                                                {\n                                                                    !_.isNil(post.rhContentPrincipalLink) ?\n                                                                        Utils.isImageFileUrl(post.rhContentPrincipalLink) ?\n                                                                            <div className=\"feed-image\" >\n                                                                                <img\n                                                                                    className=\"\"\n                                                                                    loading=\"lazy\"\n                                                                                    style={{ objectFit: \"cover\", width: \"100%\", height: \"250px\"}}\n                                                                                    src={Config.imageFolder + post.rhContentPrincipalLink} />\n                                                                            </div>\n                                                                            :\n                                                                            <ReactPlayer\n                                                                                className=\"img-fluid img-reponsive video-preview\"\n                                                                                width=\"400px\"\n                                                                                height=\"200px\"\n                                                                                url={Config.imageFolder + post.rhContentPrincipalLink}\n                                                                            />\n                                                                        : <img className=\"img-fluid img-reponsive\"\n                                                                            loading=\"lazy\"\n                                                                            style={{ objectFit: \"cover\", width: \"100%\", height: \"250px\"}}\n                                                                            src=\"https://picsum.photos/800/650\" />\n                                                                }\n\n                                                            </div>\n                                                            <div className=\"col-md-7 p-3 pr-3\">\n                                                                <div className=\"news-feed-text\">\n                                                                    <h4 className=\"\">{post.rhContentTitle}</h4>\n                                                                    <span className=\"date\">\n                                                                        <div className=\"mb-1 font-weight-medium h6\">\n                                                                            {moment(post.rhContentDateCreated).format(\"lll\")}\n                                                                        </div>\n                                                                    </span>\n                                                                    <span>\n                                                                        <Interweave\n                                                                            content={Utils.removeTag(Utils.cutString(post.rhContentDescription, 200))} />\n                                                                    </span>\n                                                                    <div\n                                                                        className=\"d-flex flex-row justify-content-between align-items-center mt-2\">\n                                                                        <NavLink\n                                                                            to={{\n                                                                                pathname: `${route.post.root}/${post.rhContentDomaine.rhContentCategoryId}/${post.rhContentDomaineId}/${post.rhContentId}`,\n                                                                                post\n                                                                            }}\n                                                                            className=\"btn btn-secondary\">\n                                                                            {t('common.read_more')}\n                                                                        </NavLink>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                            )\n                                            } />\n\n                                }\n\n                            </div> */}\n\n                            {/* <div className=\"col-lg-3 col-sm-3 col-md-3 col-xs-12\">\n                                <PostWidgetList theme=\"black\" posts={props.resultBlog} />\n                            </div> */}\n                        {/* </div>\n                    </div>\n                </div>\n            </section> */}\n        </>\n    );\n\n}\n\nconst mapStateToProps = state => ({\n    loading: state.getAllPostsReducer.loading,\n    result: state.getAllPostsReducer.result,\n    error: state.getAllPostsReducer.error,\n\n    loadingGetAllPostsFeatured: state.getAllPostFeaturedReducer.loading,\n    resultGetAllPostsFeatured: state.getAllPostFeaturedReducer.result,\n    errorGetAllPostsFeatured: state.getAllPostFeaturedReducer.error,\n\n    loadingBlog: state.getAllBlogReducer.loading,\n    resultBlog: state.getAllBlogReducer.result,\n    errorBlog: state.getAllBlogReducer.error,\n\n    loadingGetDomaine: state.getAllDomainesReducer.loading,\n    resultGetDomaine: state.getAllDomainesReducer.result,\n    errorGetDomaine: state.getAllDomainesReducer.error,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    getAllPostsByDomaineAction,\n    getAllPostsByDomaineReset,\n\n    getAllPostsAction,\n    getAllPostsReset,\n\n    getAllBlogAction,\n\n    getPostFeaturedAction,\n    getPostFeaturedReset,\n\n    getAllPostsFeaturedAction,\n    getAllPostsFeaturedReset,\n\n    getAllPostsFrontEndAction,\n    getAllBlogReset\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));\n","/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/components/AboutOpenRHWidget/index.js",[],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/components/SocialShare/index.js",["366","367","368","369","370","371","372"],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/api/CommentApi.js",[],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/reducers/JobOfferReducer/PostJobOfferReducer.js",["373"],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/screens/Admin/Testimonial/index.js",["374","375","376","377","378","379","380","381","382","383","384"],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/types/TestimonialType.js",[],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/types/JobOfferType.js",[],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/components/PopularPostAside/index.js",["385","386"],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/reducers/PostsReducer/GetPostByIdReducer.js",["387"],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/components/PostWidgetList/index.js",["388","389"],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/api/SignInApi.js",["390","391","392"],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/reducers/CommentReducer/PostCommentReducer.js",["393"],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/types/DomaineType.js",[],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/redux/actions/CategoryActions.js",[],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/components/PostWidget/index.js",["394"],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/layout/TestimonialLayout/index.js",[],"/Users/vianneymfetie/Desktop/OCM/Orange_Open_RH/src/components/Slider/index.js",[],{"ruleId":"395","severity":1,"message":"396","line":32,"column":9,"nodeType":"397","messageId":"398","endLine":32,"endColumn":16},{"ruleId":"399","severity":1,"message":"400","line":43,"column":24,"nodeType":"401","messageId":"402","endLine":43,"endColumn":26},{"ruleId":"395","severity":1,"message":"403","line":44,"column":17,"nodeType":"397","messageId":"398","endLine":44,"endColumn":23},{"ruleId":"399","severity":1,"message":"400","line":46,"column":30,"nodeType":"401","messageId":"402","endLine":46,"endColumn":32},{"ruleId":"399","severity":1,"message":"400","line":62,"column":17,"nodeType":"401","messageId":"402","endLine":62,"endColumn":19},{"ruleId":"395","severity":1,"message":"404","line":71,"column":25,"nodeType":"397","messageId":"398","endLine":71,"endColumn":29},{"ruleId":"405","severity":1,"message":"406","line":87,"column":8,"nodeType":"407","endLine":87,"endColumn":18,"suggestions":"408"},{"ruleId":"409","severity":1,"message":"410","line":9,"column":1,"nodeType":"411","endLine":37,"endColumn":3},{"ruleId":"409","severity":1,"message":"410","line":9,"column":1,"nodeType":"411","endLine":37,"endColumn":3},{"ruleId":"409","severity":1,"message":"410","line":9,"column":1,"nodeType":"411","endLine":37,"endColumn":3},{"ruleId":"395","severity":1,"message":"412","line":4,"column":9,"nodeType":"397","messageId":"398","endLine":4,"endColumn":16},{"ruleId":"395","severity":1,"message":"413","line":15,"column":5,"nodeType":"397","messageId":"398","endLine":15,"endColumn":31},{"ruleId":"395","severity":1,"message":"414","line":16,"column":5,"nodeType":"397","messageId":"398","endLine":16,"endColumn":30},{"ruleId":"395","severity":1,"message":"415","line":29,"column":5,"nodeType":"397","messageId":"398","endLine":29,"endColumn":10},{"ruleId":"395","severity":1,"message":"416","line":33,"column":10,"nodeType":"397","messageId":"398","endLine":33,"endColumn":12},{"ruleId":"395","severity":1,"message":"417","line":33,"column":14,"nodeType":"397","messageId":"398","endLine":33,"endColumn":18},{"ruleId":"395","severity":1,"message":"418","line":33,"column":20,"nodeType":"397","messageId":"398","endLine":33,"endColumn":27},{"ruleId":"395","severity":1,"message":"419","line":37,"column":12,"nodeType":"397","messageId":"398","endLine":37,"endColumn":23},{"ruleId":"395","severity":1,"message":"420","line":37,"column":25,"nodeType":"397","messageId":"398","endLine":37,"endColumn":39},{"ruleId":"395","severity":1,"message":"421","line":39,"column":24,"nodeType":"397","messageId":"398","endLine":39,"endColumn":37},{"ruleId":"405","severity":1,"message":"422","line":95,"column":8,"nodeType":"407","endLine":95,"endColumn":15,"suggestions":"423"},{"ruleId":"405","severity":1,"message":"424","line":101,"column":8,"nodeType":"407","endLine":101,"endColumn":10,"suggestions":"425"},{"ruleId":"426","replacedBy":"427"},{"ruleId":"428","replacedBy":"429"},{"ruleId":"395","severity":1,"message":"430","line":3,"column":8,"nodeType":"397","messageId":"398","endLine":3,"endColumn":23},{"ruleId":"395","severity":1,"message":"431","line":4,"column":9,"nodeType":"397","messageId":"398","endLine":4,"endColumn":17},{"ruleId":"395","severity":1,"message":"432","line":6,"column":8,"nodeType":"397","messageId":"398","endLine":6,"endColumn":18},{"ruleId":"395","severity":1,"message":"433","line":7,"column":8,"nodeType":"397","messageId":"398","endLine":7,"endColumn":16},{"ruleId":"395","severity":1,"message":"434","line":8,"column":8,"nodeType":"397","messageId":"398","endLine":8,"endColumn":20},{"ruleId":"395","severity":1,"message":"435","line":11,"column":56,"nodeType":"397","messageId":"398","endLine":11,"endColumn":80},{"ruleId":"395","severity":1,"message":"436","line":20,"column":9,"nodeType":"397","messageId":"398","endLine":20,"endColumn":17},{"ruleId":"395","severity":1,"message":"437","line":20,"column":19,"nodeType":"397","messageId":"398","endLine":20,"endColumn":32},{"ruleId":"395","severity":1,"message":"438","line":28,"column":8,"nodeType":"397","messageId":"398","endLine":28,"endColumn":27},{"ruleId":"395","severity":1,"message":"417","line":38,"column":14,"nodeType":"397","messageId":"398","endLine":38,"endColumn":18},{"ruleId":"395","severity":1,"message":"439","line":41,"column":11,"nodeType":"397","messageId":"398","endLine":41,"endColumn":22},{"ruleId":"440","severity":1,"message":"441","line":51,"column":25,"nodeType":"442","endLine":53,"endColumn":86},{"ruleId":"440","severity":1,"message":"441","line":62,"column":21,"nodeType":"442","endLine":62,"endColumn":124},{"ruleId":"405","severity":1,"message":"443","line":116,"column":8,"nodeType":"407","endLine":116,"endColumn":31,"suggestions":"444"},{"ruleId":"405","severity":1,"message":"445","line":23,"column":8,"nodeType":"407","endLine":23,"endColumn":33,"suggestions":"446"},{"ruleId":"395","severity":1,"message":"447","line":26,"column":12,"nodeType":"397","messageId":"398","endLine":26,"endColumn":16},{"ruleId":"405","severity":1,"message":"448","line":36,"column":8,"nodeType":"407","endLine":36,"endColumn":21,"suggestions":"449"},{"ruleId":"440","severity":1,"message":"441","line":93,"column":69,"nodeType":"442","endLine":95,"endColumn":130},{"ruleId":"440","severity":1,"message":"441","line":104,"column":63,"nodeType":"442","endLine":106,"endColumn":105},{"ruleId":"409","severity":1,"message":"410","line":9,"column":1,"nodeType":"411","endLine":37,"endColumn":3},{"ruleId":"450","severity":1,"message":"451","line":164,"column":5,"nodeType":"452","messageId":"453","endLine":167,"endColumn":6},{"ruleId":"395","severity":1,"message":"430","line":3,"column":8,"nodeType":"397","messageId":"398","endLine":3,"endColumn":23},{"ruleId":"395","severity":1,"message":"431","line":4,"column":9,"nodeType":"397","messageId":"398","endLine":4,"endColumn":17},{"ruleId":"395","severity":1,"message":"432","line":6,"column":8,"nodeType":"397","messageId":"398","endLine":6,"endColumn":18},{"ruleId":"395","severity":1,"message":"454","line":28,"column":9,"nodeType":"397","messageId":"398","endLine":28,"endColumn":22},{"ruleId":"395","severity":1,"message":"417","line":37,"column":14,"nodeType":"397","messageId":"398","endLine":37,"endColumn":18},{"ruleId":"395","severity":1,"message":"418","line":37,"column":20,"nodeType":"397","messageId":"398","endLine":37,"endColumn":27},{"ruleId":"395","severity":1,"message":"439","line":40,"column":11,"nodeType":"397","messageId":"398","endLine":40,"endColumn":22},{"ruleId":"405","severity":1,"message":"455","line":51,"column":8,"nodeType":"407","endLine":51,"endColumn":10,"suggestions":"456"},{"ruleId":"395","severity":1,"message":"457","line":28,"column":8,"nodeType":"397","messageId":"398","endLine":28,"endColumn":9},{"ruleId":"395","severity":1,"message":"417","line":36,"column":14,"nodeType":"397","messageId":"398","endLine":36,"endColumn":18},{"ruleId":"395","severity":1,"message":"418","line":36,"column":20,"nodeType":"397","messageId":"398","endLine":36,"endColumn":27},{"ruleId":"395","severity":1,"message":"458","line":48,"column":12,"nodeType":"397","messageId":"398","endLine":48,"endColumn":26},{"ruleId":"395","severity":1,"message":"459","line":48,"column":28,"nodeType":"397","messageId":"398","endLine":48,"endColumn":45},{"ruleId":"460","severity":1,"message":"461","line":63,"column":36,"nodeType":"462","messageId":"463","endLine":63,"endColumn":38},{"ruleId":"440","severity":1,"message":"441","line":97,"column":17,"nodeType":"442","endLine":100,"endColumn":19},{"ruleId":"440","severity":1,"message":"441","line":117,"column":17,"nodeType":"442","endLine":121,"endColumn":19},{"ruleId":"405","severity":1,"message":"455","line":211,"column":8,"nodeType":"407","endLine":211,"endColumn":10,"suggestions":"464"},{"ruleId":"405","severity":1,"message":"422","line":250,"column":8,"nodeType":"407","endLine":250,"endColumn":15,"suggestions":"465"},{"ruleId":"395","severity":1,"message":"466","line":17,"column":12,"nodeType":"397","messageId":"398","endLine":17,"endColumn":16},{"ruleId":"409","severity":1,"message":"410","line":9,"column":1,"nodeType":"411","endLine":37,"endColumn":3},{"ruleId":"395","severity":1,"message":"467","line":3,"column":8,"nodeType":"397","messageId":"398","endLine":3,"endColumn":15},{"ruleId":"395","severity":1,"message":"468","line":4,"column":8,"nodeType":"397","messageId":"398","endLine":4,"endColumn":18},{"ruleId":"426","replacedBy":"469"},{"ruleId":"428","replacedBy":"470"},{"ruleId":"395","severity":1,"message":"412","line":5,"column":9,"nodeType":"397","messageId":"398","endLine":5,"endColumn":16},{"ruleId":"395","severity":1,"message":"471","line":20,"column":12,"nodeType":"397","messageId":"398","endLine":20,"endColumn":29},{"ruleId":"395","severity":1,"message":"472","line":20,"column":31,"nodeType":"397","messageId":"398","endLine":20,"endColumn":51},{"ruleId":"395","severity":1,"message":"473","line":21,"column":12,"nodeType":"397","messageId":"398","endLine":21,"endColumn":20},{"ruleId":"395","severity":1,"message":"474","line":21,"column":22,"nodeType":"397","messageId":"398","endLine":21,"endColumn":33},{"ruleId":"405","severity":1,"message":"475","line":32,"column":8,"nodeType":"407","endLine":32,"endColumn":15,"suggestions":"476"},{"ruleId":"395","severity":1,"message":"477","line":30,"column":12,"nodeType":"397","messageId":"398","endLine":30,"endColumn":17},{"ruleId":"395","severity":1,"message":"478","line":30,"column":19,"nodeType":"397","messageId":"398","endLine":30,"endColumn":27},{"ruleId":"395","severity":1,"message":"458","line":34,"column":12,"nodeType":"397","messageId":"398","endLine":34,"endColumn":26},{"ruleId":"395","severity":1,"message":"459","line":34,"column":28,"nodeType":"397","messageId":"398","endLine":34,"endColumn":45},{"ruleId":"460","severity":1,"message":"461","line":48,"column":36,"nodeType":"462","messageId":"463","endLine":48,"endColumn":38},{"ruleId":"440","severity":1,"message":"441","line":81,"column":17,"nodeType":"442","endLine":85,"endColumn":19},{"ruleId":"405","severity":1,"message":"424","line":112,"column":8,"nodeType":"407","endLine":112,"endColumn":10,"suggestions":"479"},{"ruleId":"405","severity":1,"message":"422","line":146,"column":8,"nodeType":"407","endLine":146,"endColumn":15,"suggestions":"480"},{"ruleId":"409","severity":1,"message":"410","line":11,"column":1,"nodeType":"411","endLine":39,"endColumn":3},{"ruleId":"395","severity":1,"message":"481","line":12,"column":12,"nodeType":"397","messageId":"398","endLine":12,"endColumn":18},{"ruleId":"395","severity":1,"message":"482","line":12,"column":20,"nodeType":"397","messageId":"398","endLine":12,"endColumn":29},{"ruleId":"395","severity":1,"message":"447","line":18,"column":12,"nodeType":"397","messageId":"398","endLine":18,"endColumn":16},{"ruleId":"405","severity":1,"message":"483","line":28,"column":8,"nodeType":"407","endLine":28,"endColumn":25,"suggestions":"484"},{"ruleId":"395","severity":1,"message":"485","line":3,"column":8,"nodeType":"397","messageId":"398","endLine":3,"endColumn":21},{"ruleId":"395","severity":1,"message":"447","line":12,"column":12,"nodeType":"397","messageId":"398","endLine":12,"endColumn":16},{"ruleId":"395","severity":1,"message":"486","line":16,"column":11,"nodeType":"397","messageId":"398","endLine":16,"endColumn":20},{"ruleId":"395","severity":1,"message":"487","line":18,"column":12,"nodeType":"397","messageId":"398","endLine":18,"endColumn":24},{"ruleId":"395","severity":1,"message":"488","line":19,"column":12,"nodeType":"397","messageId":"398","endLine":19,"endColumn":13},{"ruleId":"405","severity":1,"message":"489","line":23,"column":8,"nodeType":"407","endLine":23,"endColumn":21,"suggestions":"490"},{"ruleId":"395","severity":1,"message":"491","line":25,"column":11,"nodeType":"397","messageId":"398","endLine":25,"endColumn":27},{"ruleId":"395","severity":1,"message":"492","line":30,"column":11,"nodeType":"397","messageId":"398","endLine":30,"endColumn":22},{"ruleId":"426","replacedBy":"493"},{"ruleId":"428","replacedBy":"494"},{"ruleId":"409","severity":1,"message":"410","line":9,"column":1,"nodeType":"411","endLine":37,"endColumn":3},{"ruleId":"395","severity":1,"message":"495","line":2,"column":8,"nodeType":"397","messageId":"398","endLine":2,"endColumn":17},{"ruleId":"395","severity":1,"message":"496","line":4,"column":8,"nodeType":"397","messageId":"398","endLine":4,"endColumn":14},{"ruleId":"395","severity":1,"message":"412","line":4,"column":9,"nodeType":"397","messageId":"398","endLine":4,"endColumn":16},{"ruleId":"395","severity":1,"message":"497","line":6,"column":9,"nodeType":"397","messageId":"398","endLine":6,"endColumn":28},{"ruleId":"395","severity":1,"message":"498","line":7,"column":9,"nodeType":"397","messageId":"398","endLine":7,"endColumn":34},{"ruleId":"395","severity":1,"message":"499","line":7,"column":36,"nodeType":"397","messageId":"398","endLine":7,"endColumn":60},{"ruleId":"395","severity":1,"message":"454","line":8,"column":9,"nodeType":"397","messageId":"398","endLine":8,"endColumn":22},{"ruleId":"395","severity":1,"message":"500","line":8,"column":24,"nodeType":"397","messageId":"398","endLine":8,"endColumn":36},{"ruleId":"395","severity":1,"message":"501","line":17,"column":8,"nodeType":"397","messageId":"398","endLine":17,"endColumn":9},{"ruleId":"395","severity":1,"message":"502","line":18,"column":9,"nodeType":"397","messageId":"398","endLine":18,"endColumn":15},{"ruleId":"395","severity":1,"message":"503","line":22,"column":8,"nodeType":"397","messageId":"398","endLine":22,"endColumn":19},{"ruleId":"395","severity":1,"message":"415","line":35,"column":5,"nodeType":"397","messageId":"398","endLine":35,"endColumn":10},{"ruleId":"405","severity":1,"message":"424","line":97,"column":8,"nodeType":"407","endLine":97,"endColumn":10,"suggestions":"504"},{"ruleId":"405","severity":1,"message":"505","line":104,"column":8,"nodeType":"407","endLine":104,"endColumn":22,"suggestions":"506"},{"ruleId":"405","severity":1,"message":"422","line":160,"column":8,"nodeType":"407","endLine":160,"endColumn":15,"suggestions":"507"},{"ruleId":"405","severity":1,"message":"508","line":165,"column":8,"nodeType":"407","endLine":165,"endColumn":20,"suggestions":"509"},{"ruleId":"510","severity":1,"message":"511","line":334,"column":37,"nodeType":"442","endLine":338,"endColumn":43},{"ruleId":"510","severity":1,"message":"511","line":341,"column":37,"nodeType":"442","endLine":342,"endColumn":83},{"ruleId":"395","severity":1,"message":"431","line":6,"column":10,"nodeType":"397","messageId":"398","endLine":6,"endColumn":18},{"ruleId":"395","severity":1,"message":"512","line":7,"column":8,"nodeType":"397","messageId":"398","endLine":7,"endColumn":22},{"ruleId":"395","severity":1,"message":"513","line":9,"column":8,"nodeType":"397","messageId":"398","endLine":9,"endColumn":23},{"ruleId":"395","severity":1,"message":"514","line":28,"column":10,"nodeType":"397","messageId":"398","endLine":28,"endColumn":30},{"ruleId":"395","severity":1,"message":"515","line":28,"column":58,"nodeType":"397","messageId":"398","endLine":28,"endColumn":64},{"ruleId":"395","severity":1,"message":"516","line":32,"column":10,"nodeType":"397","messageId":"398","endLine":32,"endColumn":16},{"ruleId":"395","severity":1,"message":"517","line":81,"column":11,"nodeType":"397","messageId":"398","endLine":81,"endColumn":23},{"ruleId":"405","severity":1,"message":"518","line":166,"column":8,"nodeType":"407","endLine":166,"endColumn":15,"suggestions":"519"},{"ruleId":"440","severity":1,"message":"441","line":805,"column":73,"nodeType":"442","endLine":807,"endColumn":134},{"ruleId":"440","severity":1,"message":"441","line":815,"column":71,"nodeType":"442","endLine":817,"endColumn":111},{"ruleId":"510","severity":1,"message":"511","line":8,"column":13,"nodeType":"442","endLine":8,"endColumn":64},{"ruleId":"510","severity":1,"message":"511","line":9,"column":13,"nodeType":"442","endLine":9,"endColumn":65},{"ruleId":"510","severity":1,"message":"511","line":10,"column":13,"nodeType":"442","endLine":10,"endColumn":66},{"ruleId":"510","severity":1,"message":"511","line":11,"column":13,"nodeType":"442","endLine":11,"endColumn":65},{"ruleId":"510","severity":1,"message":"511","line":12,"column":13,"nodeType":"442","endLine":12,"endColumn":65},{"ruleId":"510","severity":1,"message":"511","line":13,"column":13,"nodeType":"442","endLine":13,"endColumn":64},{"ruleId":"510","severity":1,"message":"511","line":14,"column":13,"nodeType":"442","endLine":14,"endColumn":61},{"ruleId":"409","severity":1,"message":"410","line":9,"column":1,"nodeType":"411","endLine":37,"endColumn":3},{"ruleId":"395","severity":1,"message":"412","line":4,"column":9,"nodeType":"397","messageId":"398","endLine":4,"endColumn":16},{"ruleId":"395","severity":1,"message":"454","line":18,"column":9,"nodeType":"397","messageId":"398","endLine":18,"endColumn":22},{"ruleId":"395","severity":1,"message":"500","line":18,"column":24,"nodeType":"397","messageId":"398","endLine":18,"endColumn":36},{"ruleId":"395","severity":1,"message":"415","line":25,"column":5,"nodeType":"397","messageId":"398","endLine":25,"endColumn":10},{"ruleId":"395","severity":1,"message":"416","line":29,"column":10,"nodeType":"397","messageId":"398","endLine":29,"endColumn":12},{"ruleId":"395","severity":1,"message":"417","line":29,"column":14,"nodeType":"397","messageId":"398","endLine":29,"endColumn":18},{"ruleId":"395","severity":1,"message":"418","line":29,"column":20,"nodeType":"397","messageId":"398","endLine":29,"endColumn":27},{"ruleId":"395","severity":1,"message":"396","line":31,"column":9,"nodeType":"397","messageId":"398","endLine":31,"endColumn":16},{"ruleId":"395","severity":1,"message":"419","line":33,"column":12,"nodeType":"397","messageId":"398","endLine":33,"endColumn":23},{"ruleId":"395","severity":1,"message":"420","line":33,"column":25,"nodeType":"397","messageId":"398","endLine":33,"endColumn":39},{"ruleId":"405","severity":1,"message":"424","line":43,"column":8,"nodeType":"407","endLine":43,"endColumn":10,"suggestions":"520"},{"ruleId":"395","severity":1,"message":"501","line":8,"column":8,"nodeType":"397","messageId":"398","endLine":8,"endColumn":9},{"ruleId":"395","severity":1,"message":"488","line":24,"column":12,"nodeType":"397","messageId":"398","endLine":24,"endColumn":13},{"ruleId":"409","severity":1,"message":"410","line":9,"column":1,"nodeType":"411","endLine":37,"endColumn":3},{"ruleId":"395","severity":1,"message":"488","line":10,"column":12,"nodeType":"397","messageId":"398","endLine":10,"endColumn":13},{"ruleId":"510","severity":1,"message":"521","line":61,"column":41,"nodeType":"442","endLine":61,"endColumn":80},{"ruleId":"399","severity":1,"message":"400","line":10,"column":20,"nodeType":"401","messageId":"402","endLine":10,"endColumn":22},{"ruleId":"399","severity":1,"message":"400","line":13,"column":26,"nodeType":"401","messageId":"402","endLine":13,"endColumn":28},{"ruleId":"399","severity":1,"message":"400","line":51,"column":32,"nodeType":"401","messageId":"402","endLine":51,"endColumn":34},{"ruleId":"409","severity":1,"message":"410","line":9,"column":1,"nodeType":"411","endLine":37,"endColumn":3},{"ruleId":"510","severity":1,"message":"511","line":48,"column":45,"nodeType":"442","endLine":48,"endColumn":87},"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'number' is assigned a value but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'disconnect'. Either include it or remove the dependency array.","ArrayExpression",["522"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'NavLink' is defined but never used.","'getAllPostsByDomaineAction' is defined but never used.","'getAllPostsByDomaineReset' is defined but never used.","'route' is assigned a value but never used.","'id' is assigned a value but never used.","'page' is assigned a value but never used.","'domaine' is assigned a value but never used.","'currentPath' is assigned a value but never used.","'setCurrentPath' is assigned a value but never used.","'setThematique' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 't'. Either include them or remove the dependency array.",["523"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["524"],"no-native-reassign",["525"],"no-negated-in-lhs",["526"],"'NavigationLight' is defined but never used.","'FakeData' is defined but never used.","'PostWidget' is defined but never used.","'Comments' is defined but never used.","'CommentField' is defined but never used.","'getAllPostsPopularAction' is defined but never used.","'FileIcon' is defined but never used.","'defaultStyles' is defined but never used.","'SecondaryNavigation' is defined but never used.","'forceUpdate' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'domaine', 'id', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["527"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["528"],"'rest' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'posts'. Either include it or remove the dependency array.",["529"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'postFaqAction' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["530"],"'$' is defined but never used.","'uploadedImages' is assigned a value but never used.","'setUploadedImages' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["531"],["532"],"'i18n' is assigned a value but never used.","'NewPost' is defined but never used.","'PostDetail' is defined but never used.",["525"],["526"],"'hasErrorExecution' is assigned a value but never used.","'setHasErrorExecution' is assigned a value but never used.","'isSubmit' is assigned a value but never used.","'setIsSubmit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["533"],"'image' is assigned a value but never used.","'setImage' is assigned a value but never used.",["534"],["535"],"'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'glossarys'. Either include it or remove the dependency array.",["536"],"'ReactPaginate' is defined but never used.","'totalPage' is assigned a value but never used.","'currentPosts' is assigned a value but never used.","'t' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'items'. Either include it or remove the dependency array.",["537"],"'handlePageChange' is assigned a value but never used.","'accordionId' is assigned a value but never used.",["525"],["526"],"'PropTypes' is defined but never used.","'moment' is defined but never used.","'getAllDomaineAction' is defined but never used.","'validatePublicationAction' is defined but never used.","'validatePublicationReset' is defined but never used.","'postFaqReset' is defined but never used.","'_' is defined but never used.","'Config' is defined but never used.","'ReactPlayer' is defined but never used.",["538"],"React Hook useEffect has a missing dependency: 'setCategoryPublishedAction'. Either include it or remove the dependency array.",["539"],["540"],"React Hook useEffect has a missing dependency: 'props.result'. Either include it or remove the dependency array.",["541"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'PostWidgetList' is defined but never used.","'TitleUnderlined' is defined but never used.","'faArrowAltCircleDown' is defined but never used.","'faPlus' is defined but never used.","'Images' is defined but never used.","'LoaderSlider' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.",["542"],["543"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",{"desc":"544","fix":"545"},{"desc":"546","fix":"547"},{"desc":"548","fix":"549"},"no-global-assign","no-unsafe-negation",{"desc":"550","fix":"551"},{"desc":"552","fix":"553"},{"desc":"554","fix":"555"},{"desc":"556","fix":"557"},{"desc":"556","fix":"558"},{"desc":"546","fix":"559"},{"desc":"560","fix":"561"},{"desc":"548","fix":"562"},{"desc":"546","fix":"563"},{"desc":"564","fix":"565"},{"desc":"566","fix":"567"},{"desc":"548","fix":"568"},{"desc":"569","fix":"570"},{"desc":"546","fix":"571"},{"desc":"572","fix":"573"},{"desc":"574","fix":"575"},{"desc":"548","fix":"576"},"Update the dependencies array to be: [disconnect, location]",{"range":"577","text":"578"},"Update the dependencies array to be: [history, props, t]",{"range":"579","text":"580"},"Update the dependencies array to be: [props]",{"range":"581","text":"582"},"Update the dependencies array to be: [domaine, id, props, props.match.params.id]",{"range":"583","text":"584"},"Update the dependencies array to be: [data, props.location.pathname]",{"range":"585","text":"586"},"Update the dependencies array to be: [posts, props.posts]",{"range":"587","text":"588"},"Update the dependencies array to be: [id, props]",{"range":"589","text":"590"},{"range":"591","text":"590"},{"range":"592","text":"580"},"Update the dependencies array to be: [history, props]",{"range":"593","text":"594"},{"range":"595","text":"582"},{"range":"596","text":"580"},"Update the dependencies array to be: [glossarys, props.glossarys]",{"range":"597","text":"598"},"Update the dependencies array to be: [items, props.items]",{"range":"599","text":"600"},{"range":"601","text":"582"},"Update the dependencies array to be: [props.result, setCategoryPublishedAction]",{"range":"602","text":"603"},{"range":"604","text":"580"},"Update the dependencies array to be: [categories, props.result]",{"range":"605","text":"606"},"Update the dependencies array to be: [loadData, props]",{"range":"607","text":"608"},{"range":"609","text":"582"},[3349,3359],"[disconnect, location]",[3764,3771],"[history, props, t]",[3924,3926],"[props]",[5262,5285],"[domaine, id, props, props.match.params.id]",[716,741],"[data, props.location.pathname]",[1090,1103],"[posts, props.posts]",[2246,2248],"[id, props]",[7994,7996],[9524,9531],[1276,1283],"[history, props]",[4338,4340],[5654,5661],[898,915],"[glossarys, props.glossarys]",[715,728],"[items, props.items]",[4425,4427],[4642,4656],"[props.result, setCategoryPublishedAction]",[6635,6642],[6764,6776],"[categories, props.result]",[6877,6884],"[loadData, props]",[1766,1768]]